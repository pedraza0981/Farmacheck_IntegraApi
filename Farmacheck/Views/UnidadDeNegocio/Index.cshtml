@model Farmacheck.Application.Models.Common.PaginatedResponse<Farmacheck.Models.UnidadDeNegocio>
@{
    ViewData["Title"] = "Unidades de negocio";
}
<style>
    #tablaDatos thead th {
        text-align: center;
        vertical-align: middle;
    }
</style>

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="text-dark">Unidades de negocio</h4>
        <div>
            <button id="btnDescargar" class="btn btn-secondary me-2">
                <i class="bi bi-download"></i> Descargar
            </button>
            <button id="btnNueva" class="btn" style="background-color:#00ab8e; color:white;">
                <i class="bi bi-plus-circle"></i> Nueva unidad
            </button>
        </div>
    </div>
    <table class="table table-bordered custom-table" id="tablaDatos">
        <thead>
            <tr>
                <th style="width:10%;">Id</th>
                <th style="width:20%;">Nombre</th>
                <th style="width:15%;">R.F.C.</th>
                <th style="width:25%;">Dirección</th>
                <th style="width:10%;">Estatus</th>
                <th style="width:20%;" class="text-center"></th>
            </tr>
        </thead>
        <tbody>
        @foreach (var u in Model.Items)
        {
            <tr>
                <td>@u.Id</td>
                <td>@u.Nombre</td>
                <td>@u.Rfc</td>
                <td>@u.Direccion</td>
                <td>@(u.Estatus == true ? "Activo" : "Inactivo")</td>
                <td class="text-center">
                    <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editar(@u.Id)"><i class="bi bi-pencil"></i></button>
                    <button class="btn btn-sm" style="background-color:#79b828; color:white;" onclick="eliminar(@u.Id)"><i class="bi bi-trash"></i></button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div class="d-flex justify-content-end">
        <nav>
            <ul class="pagination mb-0" id="paginador"></ul>
        </nav>
    </div>
</div>

<div class="modal fade" id="modalEntidad" tabindex="-1" aria-labelledby="modalTitulo" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary_form text-white">
                <h5 class="modal-title" id="modalTitulo">Nueva unidad</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="entidadId" />
                <div class="mb-2">
                    <label>Nombre</label>
                    <input type="text" class="form-control" id="nombre" placeholder="Nombre" />
                </div>
                <div class="mb-2">
                    <label>RFC</label>
                    <input type="text" class="form-control" id="rfc" placeholder="RFC" />
                </div>
                <div class="mb-2">
                    <label>Dirección</label>
                    <input type="text" class="form-control" id="direccion" placeholder="Dirección" />
                </div>
                <div class="form-check form-switch mb-2">
                    <input class="form-check-input" type="checkbox" id="estatusCheck" checked disabled>
                    <label class="form-check-label" for="estatusCheck">Habilitado</label>
                </div>
                <div class="mb-2">
                    <label>Logotipo</label>
                    <input type="file" class="form-control" id="logotipoArchivo" accept="image/*" />
                    <input type="text" class="form-control mt-2" id="logotipo" readonly />
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button id="btnGuardar" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var pagina = @Model.CurrentPage;
        var pageSize = @Model.PageSize;

        $(document).ready(function () {
            $('#tablaDatos').DataTable({
                paging: false,
                searching: true,
                ordering: true,
                info: false,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                }
            });

            renderPagination({ totalPages: @Model.TotalPages, hasNextPage: @Model.HasNextPage.ToString().ToLower(), hasPreviousPage: @Model.HasPreviousPage.ToString().ToLower() });

            $('#btnNueva').click(function () {
                limpiar();
                $('#modalTitulo').text('Nueva unidad');
                $('#estatusCheck').prop('checked', true).prop('disabled', true);
                $('#modalEntidad').modal('show');
            });

            $('#btnDescargar').click(function () {
                descargarReporte();
            });

            $('#logotipoArchivo').change(function () {
                const file = this.files[0];
                $('#logotipo').val(file ? file.name : '');
            });

            $('#btnGuardar').click(function () {
                const id = parseInt($('#entidadId').val()) || 0;
                const formData = new FormData();
                formData.append('Id', id);
                formData.append('Nombre', $('#nombre').val());
                formData.append('Rfc', $('#rfc').val());
                formData.append('Direccion', $('#direccion').val());
                formData.append('Estatus', $('#estatusCheck').prop('checked'));

                const file = $('#logotipoArchivo')[0].files[0];
                if (file) {
                    formData.append('LogotipoArchivo', file);
                }

                $.ajax({
                    url: '@Url.Action("Guardar", "UnidadDeNegocio")',
                    method: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (r) {
                        if (r.success) {
                            $('#modalEntidad').modal('hide');
                            const mensaje = (id === 0)
                                ? 'Unidad insertada correctamente'
                                : 'Unidad actualizada correctamente';
                            showAlert(mensaje, 'success');
                            cargar(pagina);
                        } else {
                            showAlert(r.error || 'Error al guardar', 'error');
                        }
                    }
                });
            });

        });

        function cargar(pag) {
            $.get('@Url.Action("Listar", "UnidadDeNegocio")', { page: pag }, function (r) {
                if (r.success) {
                    const tabla = $('#tablaDatos');
                    if ($.fn.DataTable.isDataTable(tabla)) {
                        tabla.DataTable().destroy();
                    }

                    const tbody = tabla.find('tbody');
                    tbody.empty();
                    r.data.items.forEach(u => {
                        tbody.append(`<tr>
                            <td>${u.id}</td>
                            <td>${u.nombre}</td>
                            <td>${u.rfc}</td>
                            <td>${u.direccion || ''}</td>
                            <td>${u.estatus ? 'Activo' : 'Inactivo'}</td>
                            <td class="text-center">
                                <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editar(${u.id})"><i class="bi bi-pencil"></i></button>
                                <button class="btn btn-sm" style="background-color:#79b828; color:white;" onclick="eliminar(${u.id})"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>`);
                    });

                    tabla.DataTable({
                        paging: false,
                        searching: true,
                        ordering: true,
                        info: false,
                        language: {
                            url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                        }
                    });

                    pagina = pag;
                    renderPagination(r.data);
                }
            });
        }

        function renderPagination(data) {
            const pagContainer = $('#paginador');
            pagContainer.empty();

            if (data.totalPages <= 0) return;

            const total = data.totalPages;
            const current = pagina;

            const addPage = (p) => {
                const active = p === current ? 'active' : '';
                pagContainer.append(`<li class="page-item ${active}"><a class="page-link" href="#" data-page="${p}">${p}</a></li>`);
            };

            pagContainer.append(`<li class="page-item ${data.hasPreviousPage ? '' : 'disabled'}"><a class="page-link" href="#" data-page="${current - 1}">Anterior</a></li>`);

            if (total <= 5) {
                for (let i = 1; i <= total; i++) {
                    addPage(i);
                }
            } else {
                if (current <= 3) {
                    for (let i = 1; i <= 4; i++) {
                        addPage(i);
                    }
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    addPage(total);
                } else if (current >= total - 2) {
                    addPage(1);
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    for (let i = total - 3; i <= total; i++) {
                        addPage(i);
                    }
                } else {
                    addPage(1);
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    for (let i = current - 1; i <= current + 1; i++) {
                        addPage(i);
                    }
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    addPage(total);
                }
            }

            pagContainer.append(`<li class="page-item ${data.hasNextPage ? '' : 'disabled'}"><a class="page-link" href="#" data-page="${current + 1}">Siguiente</a></li>`);

            pagContainer.find('a').off('click').on('click', function (e) {
                e.preventDefault();
                const p = parseInt($(this).data('page'));
                if (!isNaN(p) && p > 0 && p !== current && p <= total) {
                    cargar(p);
                }
            });
        }

        function descargarReporte() {
            fetch('@Url.Action("DescargarReporte", "UnidadDeNegocio")')
                .then(r => r.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'ReporteUnidades.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                });
        }

        function editar(id) {
            $.get('@Url.Action("Obtener", "UnidadDeNegocio")', { id }, function (r) {
                if (r.success) {
                    const u = r.data;
                    $('#modalTitulo').text('Editar unidad');
                    $('#entidadId').val(u.id);
                    $('#nombre').val(u.nombre);
                    $('#rfc').val(u.rfc);
                    $('#direccion').val(u.direccion);
                    $('#logotipo').val(u.logotipoNombreArchivo);
                    $('#estatusCheck').prop('checked', u.estatus).prop('disabled', false);

                    $('#logotipoArchivo').val('');

                    $('#modalEntidad').modal('show');
                } else {
                    showAlert(r.error || 'No se pudo cargar', 'error');
                }
            });
        }

        function eliminar(id) {
            confirmAction('¿Deseas eliminar esta unidad?').then(function (ok) {
                if (!ok) return;
                $.post('@Url.Action("Eliminar", "UnidadDeNegocio")', { id }, function (r) {
                    if (r.success) {
                        cargar(pagina);
                    } else {
                        showAlert(r.error || 'Error al eliminar', 'error');
                    }
                });
            });
        }

        function limpiar() {
            $('#entidadId').val('');
            $('#nombre').val('');
            $('#rfc').val('');
            $('#direccion').val('');
            $('#logotipo').val('');
            $('#logotipoArchivo').val('');
            $('#estatusCheck').prop('checked', true).prop('disabled', true);
        }
    </script>
}

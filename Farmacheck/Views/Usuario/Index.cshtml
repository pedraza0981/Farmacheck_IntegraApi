@model List<Farmacheck.Models.UsuarioViewModel>
@{
    ViewData["Title"] = "Usuarios";
}
<head>
    <style>
        .loader-gif {
            width: 64px; /* ajusta aquí (32px, 48px, 64px, etc.) */
            height: auto; /* mantiene proporción */
            image-rendering: auto;
        }
    </style>
</head>
<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="text-dark">Usuarios</h4>
        <div>
            <button id="btnDescargar" class="btn btn-secondary me-2">
                <i class="bi bi-download"></i> Descargar
            </button>
            <button id="btnDescargarRoles" class="btn btn-secondary me-2">
                <i class="bi bi-download"></i> Descargar roles por usuario
            </button>
            <button id="btnNuevo" class="btn" style="background-color:#00ab8e; color:white;">
                <i class="bi bi-plus-circle"></i> Nuevo usuario
            </button>
        </div>
    </div>
    <table class="table table-bordered custom-table" id="tablaDatos">
        <thead>
            <tr>
                <th style="width:10%;">Id</th>
                <th style="width:25%;">Nombre</th>
                <th style="width:25%;">Email</th>
                <th style="width:20%;">Teléfono</th>
                <th style="width:10%;">Estatus</th>
                <th style="width:10%;" class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var u in Model)
            {
                <tr>
                    <td>@u.Id</td>
                    <td>@u.Nombre @u.ApellidoPaterno @u.ApellidoMaterno</td>
                    <td>@u.Email</td>
                    <td>@u.NumeroDeTelefono</td>
                    <td>@(u.Estatus ? "Activo" : "Inactivo")</td>
                    <td class="text-center">
                        <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editar(@u.Id)"><i class="bi bi-pencil"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal fade" id="modalEntidad" tabindex="-1" aria-labelledby="modalTitulo" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary_form text-white">
                <h5 class="modal-title" id="modalTitulo">Nuevo usuario</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="entidadId" />

                <!-- Sección: Datos Personales -->
                <h6 class="text-muted mb-3">Datos Personales</h6>
                <div class="row g-3">
                    <div class="col-md-4">
                        <label>Nombre</label>
                        <input type="text" class="form-control rounded-3" id="nombre" placeholder="Nombre" />
                    </div>
                    <div class="col-md-4">
                        <label>Apellido paterno</label>
                        <input type="text" class="form-control rounded-3" id="apellidoPaterno" placeholder="Apellido paterno" />
                    </div>
                    <div class="col-md-4">
                        <label>Apellido materno</label>
                        <input type="text" class="form-control rounded-3" id="apellidoMaterno" placeholder="Apellido materno" />
                    </div>
                    <div class="col-md-6">
                        <label>Email</label>
                        <input type="email" class="form-control rounded-3" id="email" placeholder="correo@dominio.com" />
                    </div>
                    <div class="col-md-3">
                        <label>Teléfono</label>
                        <input type="text" class="form-control rounded-3" id="telefono" placeholder="Teléfono" inputmode="numeric" pattern="[0-9]*" />
                    </div>
                    <div class="col-md-3 d-flex align-items-center">
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="estatusCheck">
                            <label class="form-check-label" for="estatusCheck">Habilitado</label>
                        </div>
                    </div>
                    <div class="col-md-3 d-flex align-items-center">
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="geolocalizacionCheck">
                            <label class="form-check-label" for="geolocalizacionCheck">Geolocalización activa</label>
                        </div>
                    </div>
                </div>

                <!-- Botones de acción -->
                <div class="row mt-4">
                    <div class="col-md-6">
                        <button class="btn btn-outline-secondary w-100 rounded-3" data-bs-dismiss="modal">Cancelar</button>
                    </div>
                    <div class="col-md-6">
                        <button id="btnGuardar" class="btn btn-primary w-100 rounded-3">Guardar</button>
                    </div>
                </div>

                <!-- Reestablecer Password -->
                <div class="row mt-3">
                    <div class="col-md-12">
                        <button id="btnResetPassword" type="button" class="btn w-100 d-flex align-items-center justify-content-center gap-2 rounded-3" style="background-color: #00ab8e; color: white;">
                            <i class="bi bi-arrow-counterclockwise"></i> Reestablecer Password
                        </button>
                    </div>
                </div>

                <!-- Gestión de Roles (con group box visual usando card) -->

                <div class="card mt-4 shadow-sm border-0" style="border-radius: 0.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);">
                    <div class="card-header bg-light border-bottom-0 d-flex justify-content-between align-items-center" style="background-color: #004a99 !important; cursor: pointer;" data-bs-toggle="collapse" data-bs-target="#collapseRoles" aria-expanded="true" aria-controls="collapseRoles">
                        <strong style="color: white;">
                            <i class="bi bi-shield-lock"></i> Gestión de Roles
                        </strong>
                        <i class="bi bi-chevron-down text-white"></i>
                    </div>
                    <div id="collapseRoles" class="collapse show">
                        <div class="card-body">
                            <div class="row align-items-end mb-3">
                                <div class="col-md-12">
                                    <button id="btnGestionarRoles" type="button" class="btn w-100 d-flex align-items-center justify-content-center gap-2 rounded-3"
                                            style="background-color: #79b828; color: white;" data-bs-toggle="modal" data-bs-target="#modalGestionRol">
                                        <i class="bi bi-gear"></i> Nuevo rol por Usuario
                                    </button>
                                </div>
                                @*  <div class="col-md-6">
                                    <label class="form-label">Seleccionar Rol</label>
                                    <select class="form-select w-100 rounded-3" id="selectRol">
                                        <option value="">-- Selecciona un rol --</option>
                                    </select>
                                </div> *@
                            </div>

                            <div class="table-responsive">
                                <table class="table table-bordered table-striped table-hover" id="tablaRoles">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Rol</th>
                                            <th>Farmacia</th>
                                            <th>Unidad de Negocio</th>
                                            <th class="text-center" style="width: 80px;"></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr class="text-center text-muted" id="noRolesRow">
                                            <td colspan="4">No hay roles encontrados</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>



            </div>
            <div class="modal-footer"></div>
        </div>
    </div>
</div>



<div class="modal fade" id="modalGestionRol" tabindex="-1" aria-labelledby="modalTituloRol" aria-hidden="true"
     data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="modalTituloRol">Gestión de rol por usuario</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="idRolPorUsuario" />
                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">Unidad de negocio</label>
                        <select id="unidadDeNegocioSelect" class="form-select"></select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">Rol</label>
                        <select id="rolSelectModal" class="form-select"></select>
                        
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <label class="form-label">Marcas <span id="countMarcas" style="font-size:12px;">(0)</span></label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="checkAllMarcas">
                            <label class="form-check-label" for="checkAllMarcas">All</label>
                        </div>
                        <div id="contenedorMarcas" class="border rounded p-2" style="max-height:300px; overflow-y:auto;"></div>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Submarcas <span id="countSubMarcas" style="font-size:12px;">(0)</span></label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="checkAllSubMarcas">
                            <label class="form-check-label" for="checkAllSubMarcas">All</label>
                        </div>
                        <div id="contenedorSubMarcas" class="border rounded p-2" style="max-height:300px; overflow-y:auto;"></div>
                    </div>
                    <div class="col-md-4">
                        <label class="form-label">Zonas <span id="countZonas" style="font-size:12px;">(0)</span></label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="checkAllZonas">
                            <label class="form-check-label" for="checkAllZonas">All</label>
                        </div>
                        <div id="contenedorZonas" class="border rounded p-2" style="max-height:300px; overflow-y:auto;"></div>
                    </div>
                </div>
                <div class="row mt-3">
                    <div class="col-12">
                        <label class="form-label">Farmacias <span id="countClientes" style="font-size:12px;">(0)</span></label>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="checkAllClientes">
                            <label class="form-check-label" for="checkAllClientes">All</label>
                        </div>
                        <input type="text" id="buscarCliente" class="form-control mb-2" placeholder="Buscar cliente...">
                        <div id="contenedorClientes" class="border rounded p-2 row row-cols-1 row-cols-md-3 g-2" style="max-height:300px; overflow-y:auto;"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button id="btnGuardarRol" class="btn btn-primary">Guardar Cambios</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="processingModal" tabindex="-1" aria-hidden="true"
     data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered modal-sm">
        <!-- modal-sm reduce ancho -->
        <div class="modal-content border-0 bg-transparent shadow-none">
            <div class="modal-body text-center p-2">
                <img src="~/images/loading_blue.gif" class="loader-gif" alt="Procesando..." />
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        let clientesSeleccionados = [];
        let usuarioGuardado = true;
        let rolesUsuarioIds = [];

        $(document).ready(function () {
            const storedLength = localStorage.getItem('usuariosPageLength');
            const initialPageLength = storedLength ? parseInt(storedLength) : 5;
            const tabla = $('#tablaDatos').DataTable({
                paging: true,
                searching: true,
                ordering: true,
                order: [],
                info: true,
                lengthMenu: [5, 10, 25, 50],
                pageLength: initialPageLength,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                }
            });
            tabla.on('length.dt', function (e, settings, len) {
                localStorage.setItem('usuariosPageLength', len);
            });

            cargarRolesModal($('#unidadDeNegocioSelect').val());
            cargarUnidadesNegocio();
            $('#unidadDeNegocioSelect').change(function () {
                const unidadId = $(this).val();
                cargarMarcas(unidadId);
                cargarRolesModal(unidadId);
            });
            $('#modalGestionRol').on('show.bs.modal', function (e) {
                if (!usuarioGuardado) {
                    e.preventDefault();
                    showAlert('Primero guarda el usuario', 'warning');
                    return;
                }
                clientesSeleccionados = [];
                const unidadId = $('#unidadDeNegocioSelect').val();
                cargarRolesModal(unidadId);
            });

            $('#btnGestionarRoles').click(function () {
                if (!usuarioGuardado) {
                    showAlert('Primero guarda el usuario', 'warning');
                    return;
                }
                limpiarModalGestionRol();
            });

            $('#collapseRoles').on('show.bs.collapse', function (e) {
                if (!usuarioGuardado) {
                    e.preventDefault();
                    showAlert('Primero guarda el usuario', 'warning');
                }
            });

            $('#contenedorMarcas').on('change', '.marca-check', function () {
                const total = $('#contenedorMarcas .marca-check').length;
                const checked = $('#contenedorMarcas .marca-check:checked').length;
                $('#checkAllMarcas').prop('checked', total > 0 && total === checked);

                const seleccionadas = $('#contenedorMarcas .marca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const subSeleccionadas = $('#contenedorSubMarcas .submarca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const zonasSeleccionadas = $('#contenedorZonas .zona-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();

                cargarSubMarcas(seleccionadas, subSeleccionadas, zonasSeleccionadas);
                cargarZonas();
                // cargarClientes();
            });

            $('#checkAllMarcas').change(function () {
                const checked = this.checked;
                $('#contenedorMarcas .marca-check').prop('checked', checked);
                const seleccionadas = checked ? $('#contenedorMarcas .marca-check').map(function () {
                    return parseInt(this.value);
                }).get() : [];
                const subSeleccionadas = $('#contenedorSubMarcas .submarca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const zonasSeleccionadas = $('#contenedorZonas .zona-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                cargarSubMarcas(seleccionadas, subSeleccionadas, zonasSeleccionadas);
                cargarZonas();
                // cargarClientes();
            });

            $('#contenedorSubMarcas').on('change', '.submarca-check', function () {
                const total = $('#contenedorSubMarcas .submarca-check').length;
                const checked = $('#contenedorSubMarcas .submarca-check:checked').length;
                $('#checkAllSubMarcas').prop('checked', total > 0 && total === checked);
                const marcas = $('#contenedorMarcas .marca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const subbrands = $('#contenedorSubMarcas .submarca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const zonasSeleccionadas = $('#contenedorZonas .zona-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                cargarZonas(marcas, subbrands, zonasSeleccionadas);
                // cargarClientes();
            });

            $('#checkAllSubMarcas').change(function () {
                const checked = this.checked;
                $('#contenedorSubMarcas .submarca-check').prop('checked', checked);
                const marcas = $('#contenedorMarcas .marca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const subbrands = $('#contenedorSubMarcas .submarca-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                const zonasSeleccionadas = $('#contenedorZonas .zona-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();
                cargarZonas(marcas, subbrands, zonasSeleccionadas);
                // cargarClientes();
            });

            $('#contenedorZonas').on('change', '.zona-check', function () {
                const total = $('#contenedorZonas .zona-check').length;
                const checked = $('#contenedorZonas .zona-check:checked').length;
                $('#checkAllZonas').prop('checked', total > 0 && total === checked);
                cargarClientes();
            });

            $('#checkAllZonas').change(function () {
                const checked = this.checked;
                $('#contenedorZonas .zona-check').prop('checked', checked);
                cargarClientes();
            });

            $('#contenedorClientes').on('change', '.cliente-check', function () {
                const total = $('#contenedorClientes .cliente-check').length;
                const checked = $('#contenedorClientes .cliente-check:checked').length;
                $('#checkAllClientes').prop('checked', total > 0 && total === checked);
            });

            $('#checkAllClientes').change(function () {
                const checked = this.checked;
                $('#contenedorClientes .cliente-check').prop('checked', checked);
            });

            $('#buscarCliente').on('input', filtrarClientes);

            $('#selectRol').change(function () {
                if (!usuarioGuardado) {
                    showAlert('Primero guarda el usuario', 'warning');
                    $(this).val('');
                    return;
                }
                const rolPorUsuarioId = $(this).val();
                if (rolPorUsuarioId) {
                    cargarTablaRoles([rolPorUsuarioId]);
                } else {
                    cargarTablaRoles(rolesUsuarioIds);
                }
            });
            $('#btnDescargar').click(function () {
                descargarReporte();
            });
            $('#btnDescargarRoles').click(function () {
                descargarReporteRolesPorUsuario();
            });
            $('#btnNuevo').click(function () {
                limpiar();
                $('#modalTitulo').text('Nuevo usuario');
                usuarioGuardado = false;
                $('#collapseRoles').collapse('hide');
                $('#modalEntidad').modal('show');
            });

            $('#telefono').on('input', function () {
                const soloDigitos = this.value.replace(/\D/g, '');
                if (this.value !== soloDigitos) {
                    this.value = soloDigitos;
                }
            });

            $('#btnResetPassword').click(function () {
                if (!usuarioGuardado) {
                    showAlert('Primero guarda el usuario', 'warning');
                    return;
                }
            });



            $('#btnGuardar').click(function () {
                const id = $('#entidadId').val() || 0;
                const datos = {
                    Id: id,
                    Nombre: $('#nombre').val(),
                    ApellidoPaterno: $('#apellidoPaterno').val(),
                    ApellidoMaterno: $('#apellidoMaterno').val(),
                    Email: $('#email').val(),
                    NumeroDeTelefono: $('#telefono').val(),
                    Estatus: $('#estatusCheck').prop('checked'),
                    GeolocalizacionActiva: $('#geolocalizacionCheck').prop('checked')
                };

                $.ajax({
                    url: '@Url.Action("Guardar", "Usuario")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(datos),
                    success: function (r) {
                        if (r.success) {
                            if (parseInt(id) === 0) {
                                $('#entidadId').val(r.id);
                                usuarioGuardado = true;
                                $('#collapseRoles').collapse('show');
                            }
                            const mensaje = parseInt(id) === 0
                                ? 'Usuario registrado correctamente'
                                : 'Usuario actualizado correctamente';
                            showAlert(mensaje, 'success');
                            cargar();
                        } else {
                            showAlert(r.error || 'Error al guardar', 'error');
                        }
                    }
                });
            });

            $('#btnGuardarRol').click(function () {
                const usuarioId = $('#entidadId').val();
                const rolId = $('#rolSelectModal').val();
                const unidadId = $('#unidadDeNegocioSelect').val();
                const idRolPorUsuario = $('#idRolPorUsuario').val();
                const clienteIds = $('#contenedorClientes .cliente-check:checked').map(function () {
                    return parseInt(this.value);
                }).get();

                if (idRolPorUsuario) {
                    const datosUpdate = {
                        Id: parseInt(idRolPorUsuario),
                        ClienteIds: clienteIds,
                        GeolocalizacionActiva: $('#geolocalizacionCheck').prop('checked')
                    };

                    const ejecutar = function () {
                        $.ajax({
                            url: '@Url.Action("GuardarRolPorUsuario", "Usuario")',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify(datosUpdate),
                            beforeSend: function () {
                                $('#processingModal').modal('show');
                            },
                            success: function (r) {
                                $('#processingModal').modal('hide');
                                if (r.success) {
                                    showAlert('Gestión de Clientes/Rol por usuario realizada correctamente', 'success');
                                    limpiarModalGestionRol();
                                    $('#modalGestionRol').modal('hide');
                                    $('#modalEntidad').modal('show');
                                    cargarSelectorRoles();
                                    $('#selectRol').val('');
                                    $('#tablaRoles tbody').html('<tr class="text-center text-muted" id="noRolesRow"><td colspan="4">No hay roles encontrados</td></tr>');
                                } else {
                                    showAlert(r.error || 'Error al actualizar', 'error');
                                }
                            },
                            error: function () {
                                $('#processingModal').modal('hide');
                                showAlert('Error al actualizar', 'error');
                            }
                        });
                    };

                    if (clienteIds.length === 0) {
                        confirmAction('No hay clientes seleccionados, se eliminará la asignación. ¿Deseas continuar?').then(function (ok) {
                            if (ok) ejecutar();
                        });
                    } else {
                        ejecutar();
                    }

                    return;
                }

                if (!rolId) {
                    showAlert('Selecciona un rol', 'warning');
                    return;
                }
                if (!unidadId) {
                    showAlert('Selecciona una unidad de negocio', 'warning');
                    return;
                }
                if (clienteIds.length === 0) {
                    showAlert('Selecciona al menos un cliente', 'warning');
                    return;
                }

                const datos = {
                    UsuarioId: parseInt(usuarioId),
                    RolId: parseInt(rolId),
                    UnidadDeNegocioId: parseInt(unidadId),
                    AsignadoPor: 1,
                    ClienteIds: clienteIds,
                    GeolocalizacionActiva: $('#geolocalizacionCheck').prop('checked')
                };

                $.ajax({
                    url: '@Url.Action("GuardarRolPorUsuario", "Usuario")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(datos),
                    beforeSend: function () {
                        $('#processingModal').modal('show');
                    },
                    success: function (r) {
                        $('#processingModal').modal('hide');
                        if (r.success) {
                            showAlert('El registro de clientes asignados a rol por usuario se realizó correctamente', 'success');
                            limpiarModalGestionRol();
                            $('#modalGestionRol').modal('hide');
                            $('#modalEntidad').modal('show');
                            cargarSelectorRoles();
                            $('#selectRol').val('');
                            $('#tablaRoles tbody').html('<tr class="text-center text-muted" id="noRolesRow"><td colspan="4">No hay roles encontrados</td></tr>');
                        } else {
                            showAlert(r.error || 'Error al guardar', 'error');
                        }
                    },
                    error: function () {
                        $('#processingModal').modal('hide');
                        showAlert('Error al guardar', 'error');
                    }
                });
            });
        });

        async function cargarUnidadesNegocio() {
            try {
                const url = '@Url.Action("ListarUnidadesNegocio", "Usuario")';
                const response = await fetch(url);
                const result = await response.json();

                if (result.success) {
                    const select = document.getElementById("unidadDeNegocioSelect");
                    select.innerHTML = '<option value="">-- Selecciona una unidad --</option>';

                    result.data.forEach(unidad => {
                        const option = document.createElement("option");
                        option.value = unidad.id;
                        option.text = unidad.nombre;
                        select.appendChild(option);
                    });
                } else {
                    console.error("No se pudieron obtener las unidades de negocio.");
                }

            } catch (error) {
                console.error("Error cargando unidades de negocio:", error);
            }
        }

        function cargarRolesModal(unidadId, rolSeleccionado = null) {
            const select = $('#rolSelectModal');
            select.empty();
            select.append('<option value="">-- Selecciona un rol --</option>');
            if (!unidadId) return;
            $.get('@Url.Action("ListarPorUnidadNegocio", "Rol")', { unidadId }, function (r) {
                if (r.success) {
                    r.data.forEach(rol => {
                        const selected = rolSeleccionado && rol.id === rolSeleccionado ? 'selected' : '';
                        select.append(`<option value="${rol.id}" ${selected}>${rol.nombre}</option>`);
                    });
                }
            });
        }

        function cargarMarcas(unidadId, marcasSeleccionadas = [], submarcasSeleccionadas = [], zonasSeleccionadas = []) {
            const contenedor = $('#contenedorMarcas');
            const contenedorSub = $('#contenedorSubMarcas');
            const contenedorZonas = $('#contenedorZonas');
            const contenedorClientes = $('#contenedorClientes');

            contenedor.empty();
            contenedorSub.empty();
            contenedorZonas.empty();
            contenedorClientes.empty();

            $('#checkAllMarcas').prop('checked', false);
            $('#checkAllSubMarcas').prop('checked', false);
            $('#checkAllZonas').prop('checked', false);
            $('#checkAllClientes').prop('checked', false);

            $('#countMarcas').text('(0)');
            $('#countSubMarcas').text('(0)');
            $('#countZonas').text('(0)');
            $('#countClientes').text('(0)');

            if (!unidadId) {
                return;
            }
            $.get('@Url.Action("ListarMarcas", "Usuario")', { unidadId }, function (r) {
                if (r.success) {
                    r.data.forEach(m => {
                        const checked = marcasSeleccionadas.includes(m.id) ? 'checked' : '';
                        contenedor.append(`
                            <div class="form-check">
                                <input class="form-check-input marca-check" type="checkbox" value="${m.id}" id="marca_${m.id}" ${checked}>
                                <label class="form-check-label" for="marca_${m.id}">${m.nombre}</label>
                            </div>
                        `);
                    });
                    const total = $('#contenedorMarcas .marca-check').length;
                    $('#countMarcas').text(`(${total})`);
                    const checkedCount = $('#contenedorMarcas .marca-check:checked').length;
                    $('#checkAllMarcas').prop('checked', total > 0 && total === checkedCount);
                    if (marcasSeleccionadas.length > 0) {
                        cargarSubMarcas(marcasSeleccionadas, submarcasSeleccionadas, zonasSeleccionadas);
                    }
                }
            });
        }

        function cargarSubMarcas(marcaIds, submarcasSeleccionadas = [], zonasSeleccionadas = []) {
            const contenedor = $('#contenedorSubMarcas');
            contenedor.empty();
            $('#checkAllSubMarcas').prop('checked', false);
            $('#countSubMarcas').text('(0)');
            if (!marcaIds || marcaIds.length === 0) {
                cargarZonas();
                return;
            }
            $.ajax({
                url: '@Url.Action("ListarPorMarca", "Usuario")',
                method: 'GET',
                traditional: true,
                data: { marcaId: marcaIds },
                success: function (r) {
                    if (r.success) {
                        r.data.forEach(s => {
                            const checked = submarcasSeleccionadas.includes(s.id) ? 'checked' : '';
                            contenedor.append(`
                                <div class="form-check">
                                    <input class="form-check-input submarca-check" type="checkbox" value="${s.id}" id="submarca_${s.id}" ${checked}>
                                    <label class="form-check-label" for="submarca_${s.id}">${s.nombre}</label>
                                </div>
                            `);
                        });
                        const total = $('#contenedorSubMarcas .submarca-check').length;
                        $('#countSubMarcas').text(`(${total})`);
                        const checkedCount = $('#contenedorSubMarcas .submarca-check:checked').length;
                        $('#checkAllSubMarcas').prop('checked', total > 0 && total === checkedCount);
                        const seleccionadasActuales = $('#contenedorSubMarcas .submarca-check:checked').map(function () {
                            return parseInt(this.value);
                        }).get();
                        if (seleccionadasActuales.length > 0) {
                            cargarZonas(marcaIds, seleccionadasActuales, zonasSeleccionadas);
                            cargarClientes();
                        } else {
                            cargarZonas();
                        }
                    }
                }
            });
        }

        function cargarZonas(brands = [], subbrands = [], zonasSeleccionadas = []) {
            const contenedor = $('#contenedorZonas');
            const contenedorClientes = $('#contenedorClientes');
            contenedor.empty();
            contenedorClientes.empty();
            $('#checkAllZonas').prop('checked', false);
            $('#checkAllClientes').prop('checked', false);
            $('#countZonas').text('(0)');
            $('#countClientes').text('(0)');
            if (!subbrands || subbrands.length === 0) {
                return;
            }

            $.ajax({
                url: '@Url.Action("ListarZonas", "Usuario")',
                method: 'GET',
                traditional: true,
                data: { brandIds: brands, subbrandIds: subbrands },                
                success: function (r) {
                    if (r.success) {
                        r.data.forEach(z => {
                            const checked = zonasSeleccionadas.includes(z.id) ? 'checked' : '';
                            contenedor.append(`
                                <div class="form-check">
                                    <input class="form-check-input zona-check" type="checkbox" value="${z.id}" id="zona_${z.id}" ${checked}>
                                    <label class="form-check-label" for="zona_${z.id}">${z.nombre}</label>
                                </div>
                            `);
                        });
                        const total = $('#contenedorZonas .zona-check').length;
                        $('#countZonas').text(`(${total})`);
                        const checkedCount = $('#contenedorZonas .zona-check:checked').length;
                        $('#checkAllZonas').prop('checked', total > 0 && total === checkedCount);

                        if (zonasSeleccionadas.length > 0) {
                            cargarClientes();
                        }
                    }
                }
            });
        }


        function cargarClientes() {
            const brands = $('#contenedorMarcas .marca-check:checked').map(function () {
                return parseInt(this.value);
            }).get();

            const subbrands = $('#contenedorSubMarcas .submarca-check:checked').map(function () {
                return parseInt(this.value);
            }).get();

            const zones = $('#contenedorZonas .zona-check:checked').map(function () {
                return parseInt(this.value);
            }).get();

            const contenedor = $('#contenedorClientes');
            contenedor.empty();
            $('#checkAllClientes').prop('checked', false);
            $('#countClientes').text('(0)');

            if (zones.length === 0) {
                return;
            }

            $.ajax({
                url: '@Url.Action("ListarClientesPorFiltros", "Usuario")',
                method: 'GET',
                traditional: true,
                data: { brandIds: brands,subbrandIds: subbrands, zoneIds: zones },
                success: function (r) {
                    if (r.success) {
                        const ids = new Set();
                        r.data.forEach(c => {
                            if (!ids.has(c.clienteId)) {
                                ids.add(c.clienteId);
                                contenedor.append(`
                                <div class="col">
                                    <div class="form-check">
                                        <input class="form-check-input cliente-check" type="checkbox" value="${c.clienteId}" id="cliente_${c.clienteId}">
                                        <label class="form-check-label" for="cliente_${c.clienteId}">${c.nombre}</label>
                                    </div>
                                </div>
                            `);
                            }
                        });

                        clientesSeleccionados = [...new Set(clientesSeleccionados)];
                        clientesSeleccionados.forEach(id => {
                            $(`#cliente_${id}`).prop('checked', true);
                        });
                        const total = $('#contenedorClientes .cliente-check').length;
                        $('#countClientes').text(`(${total})`);
                        const checked = $('#contenedorClientes .cliente-check:checked').length;
                        $('#checkAllClientes').prop('checked', total > 0 && total === checked);
                        filtrarClientes();
                    }
                }
            });
        }

        function filtrarClientes() {
            const filtro = $('#buscarCliente').val().toLowerCase();
            $('#contenedorClientes .col').each(function () {
                const nombre = $(this).text().toLowerCase();
                $(this).toggle(nombre.includes(filtro));
            });
        }


        function cargarSelectorRoles() {
                const usuarioId = $('#entidadId').val() || 0;

                $.get('@Url.Action("ListarRolesPorUsuario", "Usuario")', { usuarioId: usuarioId }, function (r) {
                    const select = $('#selectRol');
                    select.empty();
                    select.append('<option value="">-- Selecciona un rol --</option>');
                    rolesUsuarioIds = [];
                    r.data.forEach(rol => {
                        select.append(`<option value="${rol.id}">${rol.rolNombre}</option>`);
                        rolesUsuarioIds.push(rol.id);
                    });
                    cargarTablaRoles(rolesUsuarioIds);
                });
            }

        function cargarTablaRoles(rolPorUsuarioIds) {
            const usuarioId = $('#entidadId').val() || 0;
            const tbody = $('#tablaRoles tbody');
            tbody.empty();

            if (!rolPorUsuarioIds || rolPorUsuarioIds.length === 0) {
                tbody.append('<tr class="text-center text-muted" id="noRolesRow"><td colspan="4">No hay roles encontrados</td></tr>');
                return;
            }

            $.ajax({
                url: '@Url.Action("ListarRolPorUsuarioCount", "Usuario")',
                method: 'GET',
                traditional: true,
                data: { rolPorUsuarioIds: rolPorUsuarioIds, usuarioId: usuarioId },
                success: function (r) {
                    if (r.success) {
                        if (r.data.length === 0) {
                            tbody.append('<tr class="text-center text-muted" id="noRolesRow"><td colspan="4">No hay roles encontrados</td></tr>');
                        } else {
                            r.data.forEach(item => {
                                tbody.append(`
                                    <tr>
                                        <td>${item.roleNombre}</td>
                                        <td>${item.totalClientesAsignados}</td>
                                        <td>${item.unidadDeNegocioNombre}</td>
                                        <td class="text-center">
                                            <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editarClientesPorRolPorUsuario(${item.rolPorUsuarioId})"><i class="bi bi-pencil"></i></button>
                                        </td>
                                    </tr>
                                `);
                            });
                        }
                    } else {
                        showAlert(r.error || 'Error al listar roles', 'error');
                    }
                }
            });
        }

        function cargar() {
            $.get('@Url.Action("Listar", "Usuario")', function (r) {
                if (r.success) {
                    const tabla = $('#tablaDatos');
                    let pageLength = parseInt(localStorage.getItem('usuariosPageLength')) || 5;
                    if ($.fn.DataTable.isDataTable(tabla)) {
                        pageLength = tabla.DataTable().page.len();
                        tabla.DataTable().destroy();
                    }

                    const tbody = tabla.find('tbody');
                    tbody.empty();
                    r.data.forEach(u => {
                        tbody.append(`<tr>
                            <td>${u.id}</td>
                            <td>${u.nombre} ${u.apellidoPaterno}</td>
                            <td>${u.email}</td>
                            <td>${u.numeroDeTelefono ?? ''}</td>
                            <td>${u.estatus ? 'Activo' : 'Inactivo'}</td>
                            <td class="text-center">
                                <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editar(${u.id})"><i class="bi bi-pencil"></i></button>
                            </td>
                        </tr>`);
                    });

                    const nuevaTabla = tabla.DataTable({
                        paging: true,
                        searching: true,
                        ordering: true,
                        order: [],
                        info: true,
                        lengthMenu: [5, 10, 25, 50],
                        pageLength: pageLength,
                        language: {
                            url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                        }
                    });
                    nuevaTabla.on('length.dt', function (e, settings, len) {
                        localStorage.setItem('usuariosPageLength', len);
                    });
                }
            });
        }

        function descargarReporte() {
            fetch('@Url.Action("DescargarReporte", "Usuario")')
                .then(r => r.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'ReporteUsuarios.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                });
        }

        function descargarReporteRolesPorUsuario() {
            fetch('@Url.Action("DescargarReporteRolesPorUsuario", "Usuario")')
                .then(r => r.blob())
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'ReporteRolesPorUsuario.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                });
        }

        function editar(id) {
            $.get('@Url.Action("Obtener", "Usuario")', { id }, function (r) {
                if (r.success) {
                    const u = r.data;
                    $('#modalTitulo').text('Editar usuario');
                    $('#entidadId').val(u.id);
                    $('#nombre').val(u.nombre);
                    $('#apellidoPaterno').val(u.apellidoPaterno);
                    $('#apellidoMaterno').val(u.apellidoMaterno);
                    $('#email').val(u.email);
                    $('#telefono').val(u.numeroDeTelefono);
                    $('#estatusCheck').prop('checked', u.estatus);
                    $('#geolocalizacionCheck').prop('checked', u.geolocalizacionActiva);

                    cargarSelectorRoles();
                    usuarioGuardado = true;
                    $('#collapseRoles').collapse('show');

                    $('#modalEntidad').modal('show');
                } else {
                    showAlert(r.error || 'No se pudo cargar', 'error');
                }
            });
        }

        function eliminar(id) {
            confirmAction('¿Deseas deshabilitar este usuario?').then(function (ok) {
                if (!ok) return;
                $.post('@Url.Action("EliminarUsuario", "Usuario")', { id }, function (r) {
                    if (r.success) {
                        showAlert(r.message || 'Usuario deshabilitado correctamente', 'success');
                        cargar();
                    } else {
                        showAlert(r.error || 'Error al deshabilitar', 'error');
                    }
                });
            });
        }

        function limpiar() {
            // Reset campos de formulario
            $('#entidadId').val('');
            $('#nombre').val('');
            $('#apellidoPaterno').val('');
            $('#apellidoMaterno').val('');
            $('#email').val('');
            $('#telefono').val('');
            $('#estatusCheck').prop('checked', true);
            $('#geolocalizacionCheck').prop('checked', true);

            // Limpiar select de rol
            const selectRol = $('#selectRol');
            selectRol.empty();
            selectRol.append('<option value="">-- Selecciona un rol --</option>');
            rolesUsuarioIds = [];

            // Limpiar tabla de roles
            $('#tablaRoles tbody').html('<tr class="text-center text-muted" id="noRolesRow"><td colspan="4">No hay roles encontrados</td></tr>');

            // Limpiar zona, marca, submarca y clientes
            $('#contenedorZonas').empty();
            $('#contenedorMarcas').empty();
            $('#contenedorSubMarcas').empty();
            $('#contenedorClientes').empty();
            $('#checkAllZonas').prop('checked', false);
            $('#checkAllMarcas').prop('checked', false);
            $('#checkAllSubMarcas').prop('checked', false);
            $('#checkAllClientes').prop('checked', false);

            // Reset selectores de rol y unidad de negocio
            $('#rolSelectModal').val('');
            $('#unidadDeNegocioSelect').val('');

            // // Volver a cargar opciones dinámicas si es necesario
            // cargarUnidadesNegocio();
            // cargarZonas();
        }

        function limpiarModalGestionRol() {
            $('#idRolPorUsuario').val('');
            $('#rolSelectModal').empty().append('<option value="">-- Selecciona un rol --</option>').prop('disabled', false);
            $('#unidadDeNegocioSelect').val('').prop('disabled', false);
            $('#checkAllMarcas').prop('checked', false);
            $('#checkAllSubMarcas').prop('checked', false);
            $('#checkAllZonas').prop('checked', false);
            $('#checkAllClientes').prop('checked', false);
            $('#buscarCliente').val('');
            $('#contenedorMarcas').empty();
            $('#contenedorSubMarcas').empty();
            $('#contenedorClientes').empty();
            $('#countMarcas').text('(0)');
            $('#countSubMarcas').text('(0)');
            clientesSeleccionados = [];
            cargarZonas();
        }

        function agregarRolARelacion(rol, farmacia, unidadNegocio) {
            $('#noRolesRow').hide();
            $('#tablaRoles tbody').append(`
                <tr>
                    <td>${rol}</td>
                    <td>${farmacia}</td>
                    <td>${unidadNegocio}</td>
                    <td class="text-center">
                        <button type="button" class="btn btn-sm btn-danger" onclick="$(this).closest('tr').remove(); controlarMensajeSinRoles();">
                            <i class="bi bi-x"></i>
                        </button>
                    </td>
                </tr>
            `);
        }

        function controlarMensajeSinRoles() {
            if ($('#tablaRoles tbody tr').length === 1) {
                $('#noRolesRow').show();
            }
        }

        function editarClientesPorRolPorUsuario(id) {
            $('#idRolPorUsuario').val(id);
            $('#modalGestionRol').modal('show');
            $.get('@Url.Action("ObtenerClientesPorRolPorUsuario", "Usuario")', { id }, function (r) {
                if (r.success) {
                    clientesSeleccionados = r.data.clienteIds || [];
                    $('#unidadDeNegocioSelect').val(r.data.unidadDeNegocioId).prop('disabled', true);
                    cargarRolesModal(r.data.unidadDeNegocioId, r.data.rolId);
                    $('#rolSelectModal').prop('disabled', true);
                    cargarMarcas(r.data.unidadDeNegocioId, r.data.marcaIds || [], r.data.submarcaIds || [], r.data.zonaIds || []);
                } else {
                    showAlert(r.error || 'Error al obtener datos', 'error');
                }
            });
        }

        function eliminarRol(id) {
            confirmAction('¿Deseas eliminar este rol?').then(function (ok) {
                if (!ok) return;

                $.ajax({
                    url: '@Url.Action("EliminarRolClienteDirecto", "Usuario")',
                    type: 'POST',
                    data: { id: id },
                    success: function (r) {
                        if (r.success) {
                            showAlert('Rol eliminado correctamente', 'success');
                            cargarSelectorRoles();
                            $('#tablaRoles tbody').html('<tr class="text-center text-muted" id="noRolesRow"><td colspan="4">No hay roles encontrados</td></tr>');
                        } else {
                            showAlert(r.error || 'Error al eliminar', 'error');
                        }
                    }
                });
            });
        }
    </script>
}

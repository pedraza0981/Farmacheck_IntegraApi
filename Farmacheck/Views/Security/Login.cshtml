@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Login - Farmacheck</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body style="background-color: #f8f9fa;">
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <div style="width:100%;">
                    <div class="row">
                        <img src="~/images/Logo_Header.png" style="width: 10%; height: auto;" />
                    </div>
                    <div class="row">
                        <img src="~/images/linea_header.png" style="width: 100%; height: auto;" />
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container d-flex justify-content-center align-items-center" style="min-height: 80vh;">
        <div style="width: 100%; max-width: 400px; background: white; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); padding: 2rem;">
            <div style="text-align: center; margin-bottom: 1rem;">
                @* <img src="images/farmacheck_logo_trazado.svg" alt="Farmacheck" style="height: 60px;"> *@
                <h4 style="color: #004080; margin-top: 1rem;">Iniciar sesión</h4>
            </div>
            <form id="loginForm">
                <div style="margin-bottom: 1rem;">
                    <label for="email" style="font-weight: bold;">Correo electrónico</label>
                    <input type="email" id="email" name="email" placeholder="usuario@dominio.com"
                           style="width: 100%; padding: 0.5rem; border: 1px solid #ccc; border-radius: 4px;" required>
                </div>
                <div style="margin-bottom: 1.5rem;">
                    <label for="password" style="font-weight: bold;">Contraseña</label>
                    <div style="position: relative;">
                        <input type="password" id="password" name="password" placeholder="••••••••"
                               style="width: 100%; padding: 0.5rem; padding-right: 2.5rem; border: 1px solid #ccc; border-radius: 4px;" required>
                        <i id="togglePassword" class="bi bi-eye" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;"></i>
                    </div>
                </div>
                <div>
                    <button type="submit" style="width: 100%; background-color: #007bff; color: white; border: none; padding: 0.6rem; border-radius: 4px;">
                        Entrar
                    </button>
                </div>
            </form>
            <div style="text-align: center; margin-top: 1rem;">
                <a href="/forgot-password" style="font-size: 0.9rem; color: #28a745;">¿Olvidaste tu contraseña?</a>
            </div>
        </div>
    </div>
    <div class="modal fade" id="passwordUpdateModal" tabindex="-1" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" style="border-radius: 12px;">
                <div class="modal-header" style="background-color: #06264C; color: white; border-top-left-radius: 12px; border-top-right-radius: 12px;">
                    <h5 class="modal-title">Actualizar contraseña</h5>
                </div>
                <div class="modal-body">
                    <div style="margin-bottom: 1rem;">
                        <label for="newPassword" style="font-weight: bold;">Nueva contraseña</label>
                        <div style="position: relative;">
                            <input type="password" id="newPassword" placeholder="••••••••" style="width: 100%; padding: 0.5rem; padding-right: 2.5rem; border: 1px solid #ccc; border-radius: 4px;" required>
                            <i id="toggleNewPassword" class="bi bi-eye" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;"></i>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem;">
                        <label for="confirmPassword" style="font-weight: bold;">Confirmar contraseña</label>
                        <div style="position: relative;">
                            <input type="password" id="confirmPassword" placeholder="••••••••" style="width: 100%; padding: 0.5rem; padding-right: 2.5rem; border: 1px solid #ccc; border-radius: 4px;" required>
                            <i id="toggleConfirmPassword" class="bi bi-eye" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;"></i>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="justify-content: center;">
                    <button id="updatePasswordButton" type="button" class="btn btn-primary" style="padding-left: 2rem; padding-right: 2rem;">Actualizar Password</button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let passwordModal;
        let allowModalClose = false;
        let modalRedirectUrl = null;
        let loginEmail = '';

        const needsPasswordUpdate = async (email) => {
            try {
                const response = await fetch('@Url.Action("GetUserByEmail", "Auth")' + `?email=${encodeURIComponent(email)}`, {
                    method: 'GET',
                    credentials: 'include'
                });

                if (!response.ok) {
                    return false;
                }

                const result = await response.json();
                return result.success && result.data && result.data.actualizaPass === true;
            } catch (error) {
                console.error('Error al obtener información del usuario:', error);
                return false;
            }
        };

        document.addEventListener('DOMContentLoaded', function () {
            const loginForm = document.getElementById('loginForm');
            const modalElement = document.getElementById('passwordUpdateModal');

            passwordModal = new bootstrap.Modal(modalElement, {
                backdrop: 'static',
                keyboard: false
            });

            modalElement.addEventListener('hide.bs.modal', function (event) {
                if (!allowModalClose) {
                    event.preventDefault();
                } else {
                    allowModalClose = false;
                    if (modalRedirectUrl) {
                        const redirectUrl = modalRedirectUrl;
                        modalRedirectUrl = null;
                        window.location.href = redirectUrl;
                    }
                }
            });

            const toggleVisibility = (toggleId, inputId) => {
                const toggle = document.getElementById(toggleId);
                const input = document.getElementById(inputId);

                if (!toggle || !input) {
                    return;
                }

                toggle.addEventListener('click', function () {
                    const type = input.getAttribute('type') === 'password' ? 'text' : 'password';
                    input.setAttribute('type', type);
                    this.classList.toggle('bi-eye');
                    this.classList.toggle('bi-eye-slash');
                });
            };

            toggleVisibility('togglePassword', 'password');
            toggleVisibility('toggleNewPassword', 'newPassword');
            toggleVisibility('toggleConfirmPassword', 'confirmPassword');

            loginForm.addEventListener('submit', async function (e) {
                e.preventDefault();

                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;

                const response = await fetch('@Url.Action("Login", "Auth")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({ email: email, password: password })
                });

                const result = await response.json();
                if (response.ok && result.success && result.data && result.data.token) {
                    loginEmail = email;
                    localStorage.setItem('username', email);
                    localStorage.setItem('token', result.data.token);

                    const mustUpdatePassword = await needsPasswordUpdate(email);
                    if (mustUpdatePassword) {
                        passwordModal.show();
                        return;
                    }

                    window.location.href = '@Url.Action("Index", "Formularios")';
                } else {
                    const message = (response.ok && result.success)
                        ? 'Autenticación incorrecta, verificar mail o contraseña'
                        : (result.error || 'Error al iniciar sesión');

                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: message
                    });
                }
            });

            document.getElementById('updatePasswordButton').addEventListener('click', async function () {
                const newPasswordInput = document.getElementById('newPassword');
                const confirmPasswordInput = document.getElementById('confirmPassword');

                const newPassword = newPasswordInput.value.trim();
                const confirmPassword = confirmPasswordInput.value.trim();

                if (newPassword.length === 0 || confirmPassword.length === 0) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Contraseña requerida',
                        text: 'Debes ingresar y confirmar la nueva contraseña.'
                    });
                    return;
                }

                if (newPassword !== confirmPassword) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Contraseñas diferentes',
                        text: 'La nueva contraseña y su confirmación deben ser iguales.'
                    });
                    return;
                }

                try {
                    const response = await fetch('@Url.Action("UpdatePassword", "Auth")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'include',
                        body: JSON.stringify({ email: loginEmail, password: newPassword })
                    });

                    const result = await response.json();

                    if (response.ok && result.success) {
                        localStorage.removeItem('username');
                        localStorage.removeItem('token');

                        Swal.fire({
                            icon: 'success',
                            title: 'Contraseña actualizada',
                            text: 'La contraseña se actualizó correctamente. Inicia sesión nuevamente.'
                        }).then(() => {
                            modalRedirectUrl = '@Url.Action("Login", "Security")';
                            allowModalClose = true;
                            passwordModal.hide();
                        });
                    } else {
                        const message = result.error || 'No fue posible actualizar la contraseña.';
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: message
                        });
                    }
                } catch (error) {
                    console.error('Error al actualizar la contraseña:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Ocurrió un error al intentar actualizar la contraseña.'
                    });
                }
            });
        });
    </script>
</body>
</html>

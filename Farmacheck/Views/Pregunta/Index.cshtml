@model List<PreguntaViewModel>
@{
    ViewData["Title"] = "Sección de preguntas";
}

<style>
    hr {
        background-color: cornflowerblue;
        height: 2px;
        border: none;
    }
</style>

<div class="container py-4">
    <div class="d-flex justify-content-center mb-2">
        <h4 class="text-dark text-center">Sección de preguntas - @ViewBag.NombreFormulario</h4>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a class="btn btn-success" style="background-color: #0c4c98 !Important; color: white;"
           href="@Url.Action("ConfigurarSecciones", "Formularios", new { id = ViewBag.FormularioId })">
            <i class="bi bi-arrow-left"></i> Regresar
        </a>
        <a href="#" id="btnNuevaPregunta" class="btn" style="background-color: #00ab8e; color:white;"> 
            <i class="bi bi-plus-circle"></i> Nueva pregunta
        </a>
    </div>

    <table class="table table-bordered custom-table">
        <thead>
            <tr>
                <th style="width: 20%">Id</th>
                <th style="width: 30%">Nombre</th>
                <th class="text-center" style="width: 50%">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model)
            {
                <tr>
                    <td>@p.Id</td>
                    <td>@p.Nombre</td>
                    <td class="text-center">
                        <a class="btn btn-outline-primary btn-sm" asp-action="Visualizar" asp-route-id="@p.Id">
                            <i class="bi bi-eye"></i> Visualizar
                        </a>
                        <button class="btn btn-outline-success btn-sm" onclick="editarPregunta(@p.Id)">
                            <i class="bi bi-pencil"></i> Editar Pregunta
                        </button>
                        <button class="btn btn-outline-danger btn-sm" onclick="confirmarEliminarPregunta(@p.Id)">
                            <i class="bi bi-trash"></i> Eliminar Pregunta
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal -->
    <div class="modal fade" id="modalPregunta" tabindex="-1" aria-labelledby="modalPreguntaTitulo" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary_form text-white">
                    <h5 class="modal-title" id="modalPreguntaTitulo">Nueva pregunta</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="preguntaId" />
                    <input type="hidden" id="seccionId" value="@ViewBag.SeccionId" />
                    <input type="hidden" id="cuestionarioId" value="@ViewBag.FormularioId" />

                    <div class="mb-2">
                        <h6 class="text-primary">Información General</h6>
                    </div>

                    <div class="mb-2">
                        <label>Nombre</label>
                        <input type="text" class="form-control" id="titulo" placeholder="Escribe la pregunta aquí" autocomplete="off" />
                    </div>

                    <div class="mb-2">
                        <label>Descripción</label>
                        <input type="text" class="form-control" id="descripcion" placeholder="(Opcional)" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label>Imagen de referencia</label>
                        <div class="row">
                            <div class="col-md-6">
                                <input type="file" class="form-control" id="imagenArchivo" accept="image/*" />
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control" id="imagenNombre" readonly />
                            </div>
                        </div>
                        <input type="hidden" id="imagenBase64" />
                    </div>

                    <div class="mb-3 mt-3 row">
                        <div class="col-md-12">
                            <label>Tipo de pregunta</label>
                            <select class="form-select" id="tipoPregunta">
                                @foreach (var tipo in ViewBag.TiposPregunta as List<SelectListItem>)
                                {
                                    <option value="@tipo.Value">@tipo.Text</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="mb-2 row">
                        <div class="col-md-4 d-flex align-items-end">
                            <div class="form-check ms-3">
                                <input type="checkbox" class="form-check-input" id="multipleSeleccion" />
                                <label class="form-check-label" for="multipleSeleccion">Múltiple selección</label>
                            </div>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <div class="form-check ms-3">
                                <input class="form-check-input" type="checkbox" id="esRequerido">
                                <label class="form-check-label" for="esRequerido">Requerido</label>
                            </div>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <div class="form-check ms-3">
                                <input class="form-check-input" type="checkbox" id="conPonderacion">
                                <label class="form-check-label" for="conPonderacion">Con Ponderación</label>
                            </div>
                        </div>
                    </div>

                    <div class="mb-2 row">
                        <div class="col-md-4 mb-3 d-flex align-items-end">
                            <div class="form-check ms-3">
                                <input type="checkbox" class="form-check-input" id="requiereEvidencia" />
                                <label class="form-check-label" for="requiereEvidencia">Requiere evidencia</label>
                            </div>
                        </div>
                        <div class="col-md-4 mb-2">
                            <label>Límite de evidencias</label>
                            <input type="number" class="form-control" id="limiteDeEvidencias" autocomplete="off" />
                        </div>
                        <div class="col-md-4 mb-2">
                            <label>Evidencias obligatorias</label>
                            <input type="number" class="form-control" id="numeroDeEvidenciasObligatorias" autocomplete="off" />
                        </div>
                    </div>                    

                    <hr />
                    <div>
                        <div class="mb-2">
                            <h6 class="text-primary">Lista de Opciones y Puntuaciones</h6>
                        </div>
                        
                            <div id="opcionesContainer"></div>
                    
                        <button class="btn btn-outline-dark btn-sm mt-2" type="button" onclick="agregarOpcion()">+ Agregar opción</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-outline-secondary" onclick="cerrarModalPregunta()">Cancelar</button>
                    <button class="btn btn-primary" onclick="guardarPregunta()">Guardar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de guardado -->
    <div class="modal fade" id="modalGuardado" tabindex="-1" aria-labelledby="modalGuardadoLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary_form text-white">
                    <h5 class="modal-title" id="modalGuardadoLabel">Pregunta</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="mensajeGuardado"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnAceptarGuardado" onclick="recargarPreguntas()">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Confirmar Eliminación -->
<div class="modal fade" id="modalConfirmarEliminar" tabindex="-1" aria-labelledby="modalEliminarTitulo" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalEliminarTitulo">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Deseas eliminar esta pregunta?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" onclick="eliminarPregunta()">Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $('.table').DataTable();
        $('#btnNuevaPregunta').click(function (e) {
            e.preventDefault(); // evita navegación si es <a>
            limpiarModalPregunta(); // ← si tienes una función para limpiar campos
            $('#modalPreguntaTitulo').text("Nueva pregunta");
            $('#modalPregunta').modal('show');
        });

        function abrirModalPregunta() {
            limpiarModalPregunta();
            $('#modalPregunta').modal('show');
        }

        function cerrarModalPregunta() {
            limpiarModalPregunta();
            $('#modalPregunta').modal('hide');
        }


        function limpiarModalPregunta() {
            $('#preguntaId').val('');
            $('#titulo').val('');
            $('#descripcion').val('');
            $('#tipoPregunta').val('');
            $('#esRequerido').prop('checked', false);
            $('#prioridad').val('');
            $('#hipervinculo').val('');
            $('#agregarComentario').val('false');
            $('#agregarImagen').val('false');
            $('#agregarCamposExtras').val('false');
            $('#opcionesContainer').empty();
        }

        function agregarOpcion() {
            const index = $('#opcionesContainer .opcion-item').length;
            $('#opcionesContainer').append(`
                <fieldset class="border p-3 mb-1 rounded">
                <div class="opcion-item" id="item-contenedor${index}">
                    <div class="row">
                        <div class="col-3">
                            <input type="text" class="form-control" placeholder="Etiqueta" id="opcionEtiqueta" name="opciones[${index}].Texto" autocomplete="off"/>
                        </div>
                        <div class="col-2">
                            <input type="number" class="form-control" placeholder="Valor" id="opcionPonderacion" name="opciones[${index}].Valor" autocomplete="off" />
                        </div>
                        <div class="col-3">
                            <input type="checkbox" class="form-check-input" id="requiereInformacionExtra" onchange="agregarComplemento(this.checked, ${index}, null)"/>
                            <label class="form-check-label" for="reqInformacionExtra">Información Extra</label>
                        </div>
                        <div class="col-3">
                            <input type="checkbox" class="form-check-input" id="requiereEvidenciaOpcion" />
                            <label class="form-check-label" for="reqEvidenciaOpcion">Req. Evidencia</label>
                        </div> 
                        <div class="col-1">
                            <button class="btn btn-sm btn-danger" type="button" onclick="$(this).closest('.opcion-item').remove()">🗑</button>
                        </div>
                    </div>
                </div>
                </fieldset>
            `);
        }

        function agregarComplemento(isChecked, index, complemento) {
            const idIndex = 'item-contenedor' + index;
            const nombre = complemento != null ? complemento.nombre : '';
            const lista = complemento != null ? complemento.listaDeOpcionesPredefinidas : '';
            if (isChecked) {
                $('#' + idIndex).append(`
                    <div class="row" id="complemento${index}">
                        <div class="col-5 "></div>
                        <div class="col-3">
                            <input type="text" class="form-control" id="complementoNombre" placeholder="Nombre" value="${nombre}" autocomplete="off"/>
                        </div>
                        <div class="col-4">
                            <input type="text" class="form-control" id="complementoListaDeOpciones" placeholder="Lista de Opciones" value="${lista}" autocomplete="off" />
                        </div>
                    </div>
            `);
            } else {
                const idIndexRemove = 'complemento' + index;
                $('#' + idIndexRemove).remove();
            }
        }

        function guardarPregunta() {
            const data = {
                Id: parseInt($('#preguntaId').val() || 0),
                SeccionDelCuestionarioId: parseInt($('#seccionId').val() || 0),
                CuestionarioId: parseInt($('#cuestionarioId').val() || 0),
                Nombre: $('#titulo').val(),
                Descripcion: $('#descripcion').val(),
                EsPreguntaObligatoria: $('#esRequerido').is(':checked'),
                EsPreguntaConPonderacion: $('#conPonderacion').is(':checked'),
                NumeroDeEvidenciasLimitadasA: $('#limiteDeEvidencias').val() || 0,
                NumeroDeEvidenciasObligatorias: $('#numeroDeEvidenciasObligatorias').val() || 0,
                RequiereEvidencia: $('#requiereEvidencia').is(':checked'),
                FormatoDeRespuesta: {
                    FormatoId: parseInt($('#tipoPregunta').val()),
                    PermiteMultipleSeleccion: $('#multipleSeleccion').is(':checked')
                },
                AgregarComentario: $('#agregarComentario').val() === "true",
                AgregarImagen: $('#agregarImagen').val() === "true",
                AgregarCamposExtras: $('#agregarCamposExtras').val() === "true",
                SeccionId: parseInt($('#seccionId').val()),
                OpcionesPorPregunta: []
            };
             
            $('#opcionesContainer .opcion-item').each(function () {
                const etiqueta = $(this).find("#opcionEtiqueta").val();
                const ponderacion = $(this).find("#opcionPonderacion").val();
                const reqEvidencia = $(this).find("#requiereEvidenciaOpcion").is(':checked');
                const reqInfoExtra = $(this).find("#requiereInformacionExtra").is(':checked');
                const complementoNombre = $(this).find("#complementoNombre").val();
                const listaDeOpciones = $(this).find("#complementoListaDeOpciones").val();

                const opciones = {
                    Etiqueta: etiqueta,
                    Ponderacion: ponderacion,
                    RequiereEvidencia: reqEvidencia,
                    RequiereInformacionExtra: reqInfoExtra
                };

                if (reqInfoExtra ==  true) {
                    opciones.OpcionesComplemento = [{
                        EtiquetaId: etiqueta,
                        Nombre: complementoNombre,
                        ListaDeOpcionesPredefinidas: listaDeOpciones
                    }];
                }

                data.OpcionesPorPregunta.push(opciones);
            });

            fetch('@Url.Action("Guardar", "Pregunta")', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(res => res.json())
            .then(r => {
                if (r.success) {
                    $('#modalPregunta').modal('hide');
                    mostrarModalGuardado();
                    //location.reload();
                } else {
                    showAlert(r.error || "Error al guardar la pregunta", 'error');
                }
            });

        }

        function editarPregunta(id) {
            $.get('@Url.Action("ObtenerPregunta", "Pregunta")', { id }, function (r) {
                if (r.success) {
                    const p = r.data;
                    $('#modalPreguntaTitulo').text('Editar pregunta');
                    $('#preguntaId').val(p.id);
                    $('#titulo').val(p.nombre);
                    $('#descripcion').val(p.descripcion);
                    $('#tipoPregunta').val(p.formatoDeRespuesta.formatoId);
                    $('#multipleSeleccion').prop('checked', p.formatoDeRespuesta.permiteMultipleSeleccion);
                    $('#esRequerido').prop('checked', p.esPreguntaObligatoria);
                    $('#conPonderacion').prop('checked', p.esPreguntaConPonderacion);
                    $('#limiteDeEvidencias').val(p.numeroDeEvidenciasLimitadasA);
                    $('#numeroDeEvidenciasObligatorias').val(p.numeroDeEvidenciasObligatorias.toString());
                    $('#requiereEvidencia').prop('checked', p.requiereEvidencia);
                    
                    $('#opcionesContainer').empty();
                    if (p.opcionesPorPregunta) {
                        p.opcionesPorPregunta.forEach((o, idx) => {
                            const evidenciaChecked = o.requiereEvidencia ? 'checked' : '';
                            const infoExtraChecked = o.requiereInformacionExtra ? 'checked' : '';

                            console.log('infoExtraChecked: ' +  infoExtraChecked)
                            $('#opcionesContainer').append(`
                                <fieldset class="border p-3 mb-1 rounded">
                                <div class="opcion-item" id="item-contenedor${idx}">
                                    <div class="row mb-1">
                                        <div class="col-3">
                                            <input type="text" class="form-control" placeholder="Etiqueta" id="opcionEtiqueta" name="opciones[${idx}].Texto" value="${o.etiqueta}" autocomplete="off"/>
                                        </div>
                                        <div class="col-2">
                                            <input type="number" class="form-control" placeholder="Ponderación" id="opcionPonderacion" name="opciones[${idx}].Valor" value="${o.ponderacion}" autocomplete="off"/>
                                        </div>
                                        <div class="col-3">
                                            <input type="checkbox" class="form-check-input" id="requiereInformacionExtra" value="${p.requiereInformacionExtra}" ${infoExtraChecked} onchange="agregarComplemento(this.checked, ${idx}, null)"/>
                                            <label class="form-check-label" for="reqInformacionExtra">Informacion Extra</label>
                                        </div>
                                        <div class="col-3">
                                            <input type="checkbox" class="form-check-input" id="requiereEvidenciaOpcion" value="${p.requiereEvidencia}" ${evidenciaChecked} />
                                            <label class="form-check-label" for="reqEvidenciaOpcion">Req. Evidencia</label>
                                        </div>
                                        <div class="col-1">
                                            <button class="btn btn-sm btn-danger" type="button" onclick="$(this).closest('.opcion-item').remove()">🗑</button>
                                        </div>
                                    </div>
                                </div>
                                </fieldset>
                            `);

                            if (infoExtraChecked) {
                                agregarComplemento(true, idx, o.opcionesComplemento[0]);
                            }
                        });
                    }
                    $('#modalPregunta').modal('show');
                } else {
                    showAlert(r.error || 'No se pudo cargar la pregunta', 'error');
                }
            });
        }

        function mostrarModalGuardado() {
            $('#mensajeGuardado').text('Guardado correctamente');
            $('#modalGuardado').modal('show');
        }

        function recargarPreguntas() {
            $('#modalGuardado').modal('hide');
            location.reload();
        }

        let preguntaIdEliminar = 0;
        function confirmarEliminarPregunta(id) {
            preguntaIdEliminar = id;
            $('#modalConfirmarEliminar').modal('show');
        }

        function eliminarPregunta() {
            $.post('@Url.Action("EliminarPregunta", "Pregunta")', { id: preguntaIdEliminar }, function (r) {
                if (r.success) {
                    $('#modalConfirmarEliminar').modal('hide');
                    location.reload();
                } else {
                    showAlert(r.error || 'Error al eliminar', 'error');
                }
            });
        }
    </script>
}




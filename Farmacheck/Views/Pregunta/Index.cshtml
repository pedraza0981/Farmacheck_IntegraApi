@model List<PreguntaViewModel>
@{
    ViewData["Title"] = "Sección de preguntas";
}

<style>
    hr {
        background-color: cornflowerblue;
        height: 2px;
        border: none;
    }
</style>

<div class="container py-4">
    <div class="d-flex justify-content-center mb-2">
        <h4 class="text-dark text-center">@ViewBag.NombreFormulario - @ViewBag.NombreSeccion - Preguntas</h4>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a class="btn btn-success" style="background-color: #0c4c98 !Important; color: white;"
           href="@Url.Action("ConfigurarSecciones", "Formularios", new { id = ViewBag.FormularioId })">
            <i class="bi bi-arrow-left"></i> Regresar
        </a>
        <div>
            <a href="#" id="btnNuevaEtiqueta" class="btn" style="background-color: #0c4c98; color:white;">
                <i class="bi bi-plus-circle"></i> Nueva Etiqueta
            </a>
            <a href="#" id="btnNuevaPregunta" class="btn" style="background-color: #00ab8e; color:white;">
                <i class="bi bi-plus-circle"></i> Nueva pregunta
            </a>
        </div>
    </div>

    <table class="table table-bordered custom-table" id="tablaPreguntas">
        <thead>
            <tr>
                <th style="width: 10%">Id</th>
                <th style="width: 30%">Etiqueta de Agrupación</th>
                <th style="width: 30%">Pregunta</th>
                <th class="text-center" style="width: 30%">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in Model)
            {
                <tr>
                    <td>@p.Id</td>
                    <td>@p.EtiquetaNombre</td>
                    <td>@p.Nombre</td>
                    <td class="text-center">
                        <button class="btn btn-outline-success btn-sm" onclick="editarPregunta(@p.Id)">
                            <i class="bi bi-pencil"></i> Editar Pregunta
                        </button>
                        <button class="btn btn-outline-danger btn-sm" onclick="confirmarEliminarPregunta(@p.Id)">
                            <i class="bi bi-trash"></i> Eliminar Pregunta
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal -->
    <div class="modal fade" id="modalPregunta" tabindex="-1" aria-labelledby="modalPreguntaTitulo" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-primary_form text-white">
                    <h5 class="modal-title" id="modalPreguntaTitulo">Nueva pregunta</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="preguntaId" />
                    <input type="hidden" id="seccionId" value="@ViewBag.SeccionId" />
                    <input type="hidden" id="cuestionarioId" value="@ViewBag.FormularioId" />

                    <div class="mb-2">
                        <h6 class="text-primary">Información General</h6>
                    </div>

                    <div class="mb-2">
                        <label>Nombre</label>
                        <input type="text" class="form-control" id="titulo" placeholder="Escribe la pregunta aquí" autocomplete="off" />
                    </div>

                    <div class="mb-2">
                        <label>Descripción</label>
                        <input type="text" class="form-control" id="descripcion" placeholder="(Opcional)" autocomplete="off" />
                    </div>

                    <div class="mb-3">
                        <label>Imagen de referencia</label>
                        <div class="row">
                            <div class="col-md-6">
                                <input type="file" class="form-control" id="imagenArchivo" accept="image/*" />
                            </div>
                            <div class="col-md-6">
                                <input type="text" class="form-control" id="imagenNombre" readonly />
                                <input type="hidden" id="imagenBase64" />
                            </div>
                        </div>
                        <input type="hidden" id="imagenBase64" />
                    </div>

                    <div class="mb-3 mt-3 row">
                        <div class="col-md-8">
                            <label>Tipo de Pregunta</label>
                            <select class="form-select" id="tipoPregunta" onchange="elegirOpciones(this, false)">
                                @foreach (var tipo in ViewBag.TiposPregunta as List<FormatoDeRespuestaCatViewModel>)
                                {
                                    <option value="@tipo.Id">@tipo.Nombre</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-4 d-flex align-items-end">
                            <div class="form-check ms-3" id="checkMutipleSeleccion">
                                <input type="checkbox" class="form-check-input" id="multipleSeleccion" />
                                <label class="form-check-label" for="multipleSeleccion">Múltiple selección</label>
                            </div>
                        </div>
                    </div>

                    <div class="mb-2 row" id="grupoPonderacion">
                        <div class="col-md-4 mb-3 d-flex align-items-end">
                            <div class="form-check ms-3">
                                <input type="checkbox" class="form-check-input" id="conPonderacion" onchange="mostrarPonderacion(this.checked)">
                                <label class="form-check-label" for="conPonderacion">Con Ponderación</label>
                            </div>
                        </div>
                        <div class="col-md-4 mb-2" id="inputPonderacion">
                            <label>Ponderación</label>
                            <input type="number" class="form-control" id="ponderacion" autocomplete="off" />
                        </div>
                    </div>

                    <div class="mb-3 mt-3 row">
                        <div class="col-md-12">
                            <label>Etiqueta de Agrupación</label>
                            <select class="form-select" id="etiquetaDeAgrupacion">
                                @foreach (var et in ViewBag.Etiquetas as List<EtiquetaDeAgrupacionViewModel>)
                                {
                                    <option value="@et.Id">@et.Etiqueta</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="mb-2 row">
                        <div class="col-md-4 mb-3 d-flex align-items-end">
                            <div class="form-check ms-3">
                                <input type="checkbox" class="form-check-input" id="requiereEvidencia" />
                                <label class="form-check-label" for="requiereEvidencia">Requiere evidencia</label>
                            </div>
                        </div>
                        <div class="col-md-4 mb-2">
                            <label>Límite de evidencias</label>
                            <input type="number" class="form-control" id="limiteDeEvidencias" autocomplete="off" onchange="establecerLimite()" />
                        </div>
                        <div class="col-md-4 mb-2">
                            <label>Evidencias obligatorias</label>
                            <input type="number" class="form-control" id="numeroDeEvidenciasObligatorias" autocomplete="off" onchange="establecerEvidenciasObligatorias()" />
                        </div>
                    </div>

                    <hr />
                    <div>
                        <div class="mb-2">
                            <h6 class="text-primary">Lista de Opciones y Puntuaciones</h6>
                        </div>
                        <div id="contenedor"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-outline-secondary" onclick="cerrarModalPregunta()">Cancelar</button>
                    <button class="btn btn-primary" onclick="guardarPregunta()">Guardar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de guardado -->
    <div class="modal fade" id="modalGuardado" tabindex="-1" aria-labelledby="modalGuardadoLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary_form text-white">
                    <h5 class="modal-title" id="modalGuardadoLabel">Pregunta</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body" id="mensajeGuardado"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnAceptarGuardado" onclick="recargarPreguntas()">Aceptar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Confirmar Eliminación -->
<div class="modal fade" id="modalConfirmarEliminar" tabindex="-1" aria-labelledby="modalEliminarTitulo" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalEliminarTitulo">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                ¿Deseas eliminar esta pregunta?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" onclick="eliminarPregunta()">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Nueva/Editar Etiqueta -->
<div class="modal fade" id="modalEtiqueta" tabindex="-1" aria-labelledby="modalEtiquetaTitulo" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary_form text-white">
                <h5 class="modal-title" id="modalEtiquetaTitulo">Nueva Etiqueta de Agrupación</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="seccionId" />
                <div class="mb-2">
                    <label>Nombre</label>
                    <input type="text" class="form-control" id="tituloEtiqueta" placeholder="Nombre de la etiqueta" />
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button id="btnGuardarEtiqueta" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var formatos = @Html.Raw(ViewBag.Formatos);
        let limiteDeEvidencias = 0;
        let evidenciasObligatorias = 0;

        const storedLength = localStorage.getItem('questionsPageLength');
        const initialPageLength = storedLength ? parseInt(storedLength) : 10;

        const tabla = $('#tablaPreguntas').DataTable({
            paging: true,
            searching: true,
            ordering: true,
            info: true,
            lengthMenu: [5, 10, 25, 50],
            pageLength: initialPageLength,
            order: [[1, 'asc']],
            language: {
                url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
            }
        });

        tabla.on('length.dt', function (e, settings, len) {
            localStorage.setItem('questionsPageLength', len);
        });

        $('#btnNuevaPregunta').click(function (e) {
            e.preventDefault(); // evita navegación si es <a>
            limpiarModalPregunta(); // ← si tienes una función para limpiar campos
            $('#modalPreguntaTitulo').text("Nueva pregunta");
            $('#modalPregunta').modal('show');
        });

         $('#btnNuevaEtiqueta').click(function () {
             limpiarModalEtiqueta();
             $('#modalEtiquetaTitulo').text("Nueva Etiqueta de Agrupación");
             $('#modalEtiqueta').modal('show');
         });

        $('#imagenArchivo').change(function () {
            const file = this.files[0];
            $('#imagenNombre').val(file ? file.name : '');
        });

        function limpiarModalEtiqueta() {
            $('#tituloEtiqueta').val('');
        }

        function establecerLimite() {
            var limite = document.getElementById("limiteDeEvidencias").value;
            var obligatorias = document.getElementById("numeroDeEvidenciasObligatorias").value;
            
            if (Number(obligatorias) > Number(limite)) {
                showAlert('El número de evidencias obligatorias debe ser menor o igual al límite de evidencias', 'error');
                $('#limiteDeEvidencias').val('');
                $('#numeroDeEvidenciasObligatorias').val('');
                return;
            }

            limiteDeEvidencias = limite;
            numeroDeEvidenciasObligatorias = obligatorias;
        }

        function establecerEvidenciasObligatorias() {
            var limite = document.getElementById("limiteDeEvidencias").value;
            var obligatorias = document.getElementById("numeroDeEvidenciasObligatorias").value;
            
            if (Number(obligatorias) > Number(limite)) {
                showAlert('El número de evidencias obligatorias debe ser menor o igual al límite de evidencias', 'error');
                $('#numeroDeEvidenciasObligatorias').val('');
                return;
            }

            limiteDeEvidencias = limite;
            numeroDeEvidenciasObligatorias = obligatorias;
        }

        function abrirModalPregunta() {
            limpiarModalPregunta();

            $('#modalPregunta').modal('show');
        }

        function cerrarModalPregunta() {
            limpiarModalPregunta();
            $('#modalPregunta').modal('hide');
        }

        function limpiarModalPregunta() {
            $('#preguntaId').val('');
            $('#titulo').val('');
            $('#descripcion').val('');
            $('#tipoPregunta').val('');
            $('#etiquetaDeAgrupacion').val('');
            $('#requiereEvidencia').prop('checked', (false));
            $('#ponderacion').val('');
            $('#agregarImagen').val('false');
            $('#agregarCamposExtras').val('false');
            $('#opcionesContainer').empty();
            $('#limiteDeEvidencias').val('');
            $('#imagenNombre').val('');
            $('#numeroDeEvidenciasObligatorias').val('');
            $('#multipleSeleccion').prop('checked', (false));
            $('#conPonderacion').prop('checked', (false));
            $('#grupoPonderacion').hide();
            $('#inputPonderacion').hide();
            $('#checkMutipleSeleccion').hide();
        }

        $('#btnGuardarEtiqueta').click(function () {
            const datos = {
                SeccionId: parseInt($('#seccionId').val() || 0),
                CuestionarioId: parseInt($('#cuestionarioId').val() || 0),
                Etiqueta: $('#tituloEtiqueta').val()
            };

            $.ajax({
                url: '@Url.Action("GuardarEtiqueta", "Pregunta")',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(datos),
                success: function (r) {
                    if (r.success) {
                        $('#modalEtiqueta').modal('hide');
                        $("#modalGuardadoLabel").text("Etiqueta");
                        mostrarModalGuardado();
                    } else {
                        showAlert(r.error || "Error al guardar", 'error');
                    }
                }
            });
        });

        function elegirOpciones(selectElement, isEdit){
            var selectedId = 0;

            if (!isEdit) {
                var selectedOption = selectElement.options[selectElement.selectedIndex];
                selectedId = selectedOption.value;
            } else {
                selectedId = selectElement;
            }

            const formato = formatos.find(ft => ft.Id == selectedId);
            const esFormatoPorEscalaNumerica = formato.BasadoEnEscalaNumerica;

            $('#conPonderacion').prop('checked', (false));
            $('#multipleSeleccion').prop('checked', (false));
            $('#ponderacion').val('');

            if (formato.Formato == 'opcionMultiple') {
                $('#checkMutipleSeleccion').show();
            } else {
                $('#checkMutipleSeleccion').hide();
            }

            if (formato.Formato == 'textoCorto' || formato.Formato == 'textoLargo') {
                $('#grupoPonderacion').show();
            } else {
                $('#grupoPonderacion').hide();
            }

            $('#contenedor').empty();
            if (esFormatoPorEscalaNumerica) {
                $('#contenedor').append(`
                    <fieldset class="border p-3 mb-1 rounded">
                        <div class="opcion-item">
                            <div class="row">
                                <div class="col-4">
                                    <label>Límite Inferior</label>
                                    <input type="number" class="form-control" id="limiteInferior" autocomplete="off" />
                                </div>
                                <div class="col-8">
                                    <label></label> 
                                    <input type="text" class="form-control" placeholder="Etiqueta" id="etiquetaLimiteInferior" autocomplete="off" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-4">
                                    <label>Límite Superior</label>
                                    <input type="number" class="form-control" id="limiteSuperior" autocomplete="off" />
                                </div>
                                <div class="col-8">
                                    <label></label>
                                    <input type="text" class="form-control" placeholder="Etiqueta" id="etiquetaLimiteSuperior" autocomplete="off" />
                                </div>
                            </div>
                        </div>
                    </fieldset>
                `);
            } else {
                $('#contenedor').append(`
                    <div id="opcionesContainer"></div>
                    <button class="btn btn-outline-dark btn-sm mt-2" type="button" onclick="agregarOpcion()">+ Agregar opción</button>
                `);
            }
        }

        function agregarOpcion() {
            const index = $('#opcionesContainer .opcion-item').length;
            $('#opcionesContainer').append(`
                <div class="opcion-item">
                    <fieldset class="border p-3 mb-1 rounded">
                        <div id="item-contenedor${index}">
                            <div class="row">
                                <div class="col-2">
                                    <input type="text" class="form-control" placeholder="Etiqueta" id="opcionEtiqueta" name="opciones[${index}].Texto" autocomplete="off"/>
                                </div>
                                <div class="col-2">
                                    <input type="text" class="form-control" placeholder="Valor" id="opcionPonderacion" name="opciones[${index}].Valor" autocomplete="off" />
                                </div>
                                 <div class="col-2">
                                    <input type="checkbox" class="form-check-input" id="requiereInformacionExtra" onchange="agregarComplemento(this.checked, ${index}, null)"/>
                                    <label class="form-check-label" for="reqInformacionExtra">Info. Extra</label>
                                </div>
                                <div class="col-3">
                                    <input type="checkbox" class="form-check-input" id="requiereEvidenciaOpcion" />
                                    <label class="form-check-label" for="reqEvidenciaOpcion">Req. Evidencia</label>
                                </div>
                                <div class="col-2">
                                    <input type="checkbox" class="form-check-input" id="generaTarea" />
                                    <label class="form-check-label" for="generaTarea">Genera tarea</label>
                                </div>
                                <div class="col-1">
                                    <button class="btn btn-sm btn-danger" type="button" onclick="$(this).closest('.opcion-item').remove()">🗑</button>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
            `);
        }

        function mostrarPonderacion(isChecked) {
            $('#ponderacion').val('');
            if (isChecked) {
               $('#inputPonderacion').show();
            } else {
                $('#inputPonderacion').hide();
            }
        }

        function agregarComplemento(isChecked, index, complemento) {
            const idIndex = 'item-contenedor' + index;
            const nombre = complemento != null ? complemento.nombre : '';
            const lista = complemento != null ? complemento.listaDeOpcionesPredefinidas : '';
            const listaArray = lista.split(';');

            if (isChecked) {
                $('#' + idIndex).append(`
                    <div class="row" id="complemento${index}">
                        <div class="row mb-2">
                            <div class="col-5"></div>
                            <div class="col-7">
                                <input type="text" class="form-control" id="complementoNombre" placeholder="Indique qué información extra desea preguntarle al usuario" value="${nombre}" autocomplete="off"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-5"></div>
                            <div class="col-6">
                                <label class="form-check-label">Lista de Opciones</label>
                                <button class="btn btn-sm" style="background-color:#0c4c98; color:white;" onclick="agregarItem('complemento${index}-contenedor-opciones')"><i class="bi bi-plus"></i></button>
                                <div id="complemento${index}-contenedor-opciones"></div>
                            </div>
                        </div>
                    </div>
                `);

                 listaArray.forEach((opcion, indice) => {
                    $('#complemento' + index + '-contenedor-opciones').append(`
                        <div class="opcion-listado-item">
                            <div id="listado-item-contenedor${indice}">
                                <div class="row mt-1" id="contenedorItem">
                                    <div class="row mb-2">
                                        <div class="col-11">
                                            <input type="text" class="form-control" id="agregarItem" placeholder="Agregar opción" value="${opcion}" autocomplete="off"/>
                                        </div>
                                        <div class="col-1">
                                            <button class="btn btn-sm btn-danger" type="button" onclick="$(this).closest('.opcion-listado-item').remove()">-</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `);
                 });
            } else {
                const idIndexRemove = 'complemento' + index;
                $('#' + idIndexRemove).remove();
            }
        }

        function agregarItem(contenedorId) {
            const index = $('#' + contenedorId + ' .opcion-listado-item').length;
            const opcionIndex = index + 1;

            $('#' + contenedorId).append(`
                <div class="opcion-listado-item">
                    <div id="listado-item-contenedor${index}">
                        <div class="row mt-1" id="contenedorItem">
                            <div class="row mb-2">
                                <div class="col-11">
                                    <input type="text" class="form-control" id="agregarItem" placeholder="Agregar opción" autocomplete="off"/>
                                </div>
                                <div class="col-1">
                                    <button class="btn btn-sm btn-danger" type="button" onclick="$(this).closest('.opcion-listado-item').remove()">-</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `);
        }

        function isNullOrEmptyOrWhitespace(value) {
          return value === null || value === undefined || (typeof value === 'string' && value.trim() === "");
        }

        function guardarPregunta() {
            const nombre = $('#titulo').val();
            const tipoPregunta = parseInt($('#tipoPregunta').val());

            if (isNullOrEmptyOrWhitespace(nombre)) {
                showAlert("El nombre es obligatorio", 'error');
                return;
            }

            if (isNaN(tipoPregunta)) {
                showAlert("El tipo de pregunta es obligatorio", 'error');
                return;
            }

            const formData = new FormData();
            const data = {
                Id: parseInt($('#preguntaId').val() || 0),
                SeccionDelCuestionarioId: parseInt($('#seccionId').val() || 0),
                CuestionarioId: parseInt($('#cuestionarioId').val() || 0),
                Nombre: $('#titulo').val(),
                ImagenDeReferencia: $('#imagenNombre').val(),
                Descripcion: $('#descripcion').val(),
                EsPreguntaObligatoria: true,
                EsPreguntaConPonderacion: $('#conPonderacion').is(':checked'),
                NumeroDeEvidenciasLimitadasA: $('#limiteDeEvidencias').val() || 0,
                NumeroDeEvidenciasObligatorias: $('#numeroDeEvidenciasObligatorias').val() || 0,
                RequiereEvidencia: $('#requiereEvidencia').is(':checked'),
                FormatoDeRespuesta: {
                    FormatoId: parseInt($('#tipoPregunta').val()),
                    PermiteMultipleSeleccion: $('#multipleSeleccion').is(':checked')
                },
                AgregarComentario: $('#agregarComentario').val() === "true",
                AgregarImagen: $('#agregarImagen').val() === "true",
                AgregarCamposExtras: $('#agregarCamposExtras').val() === "true",
                SeccionId: parseInt($('#seccionId').val()),
                EtiquetaId: parseInt($('#etiquetaDeAgrupacion').val()),
                OpcionesPorPregunta: []
            };
            data.Ponderacion = data.EsPreguntaConPonderacion ? parseFloat($('#ponderacion').val()) : null;

            const formatoId = data.FormatoDeRespuesta.FormatoId;
            const formato = formatos.find(ft => ft.Id == formatoId);
            const esFormatoPorEscalaNumerica = formato.BasadoEnEscalaNumerica;

            if (esFormatoPorEscalaNumerica)
            {
                data.EtiquetasPorEscalaNumerica = [{
                    limiteInferior: $('#limiteInferior').val() || 0,
                    limiteSuperior: $('#limiteSuperior').val() || 0,
                    etiquetaParaEscalaInferior: $('#etiquetaLimiteInferior').val(),
                    etiquetaParaEscalaSuperior: $('#etiquetaLimiteSuperior').val()
                }];
            } 
            else 
            {
                $('#opcionesContainer .opcion-item').each(function (index, element) {
                    const etiqueta = $(this).find("#opcionEtiqueta").val();
                    const ponderacionValor = $(this).find("#opcionPonderacion").val();
                    const ponderacion = esNumero(ponderacionValor) ? ponderacionValor : null;
                    const reqEvidencia = $(this).find("#requiereEvidenciaOpcion").is(':checked');
                    const reqInfoExtra = $(this).find("#requiereInformacionExtra").is(':checked');
                    const generaTarea = $(this).find("#generaTarea").is(':checked');
                    const complementoNombre = $(this).find("#complementoNombre").val();

                    const opciones = {
                        Etiqueta: etiqueta,
                        Ponderacion: ponderacion,
                        RequiereEvidencia: reqEvidencia,
                        RequiereInformacionExtra: reqInfoExtra,
                        GeneraTarea: generaTarea,
                        Estatus: true
                    };

                    if (reqInfoExtra ==  true) {
                        let listado = '';
                        let primerElemento = true;
                        const complementoId = 'complemento' + index + '-contenedor-opciones';

                        $('#' + complementoId + ' .opcion-listado-item').each(function (complementIndex, complementElement) {
                            const opcionItem = $(this).find("#agregarItem").val();
                            if (primerElemento) {
                                listado = opcionItem;
                            } else {
                                listado = listado + ';' + opcionItem;
                            }
                            primerElemento = false;
                        });
                        opciones.OpcionesComplemento = [{
                            EtiquetaId: etiqueta,
                            Nombre: complementoNombre,
                            ListaDeOpcionesPredefinidas: listado
                        }];
                    }

                    data.OpcionesPorPregunta.push(opciones);
                });
            }

            formData.append('data', JSON.stringify(data));

            const file = $('#imagenArchivo')[0].files[0];
            if (file) {
                formData.append('archivo', file);
            }
            
            fetch('@Url.Action("Guardar", "Pregunta")', {
                method: 'POST',
                body: formData,
                processData: false,
                contentType: false,
            })
            .then(res => res.json())
            .then(r => {
                if (r.success) {
                    $('#modalPregunta').modal('hide');
                    mostrarModalGuardado();
                } else {
                    showAlert(r.error || "Error al guardar la pregunta", 'error');
                }
            });
        }

        function editarPregunta(id) {
            $.get('@Url.Action("ObtenerPregunta", "Pregunta")', { id }, function (r) {
                if (r.success) {
                    const p = r.data;
                    $('#modalPreguntaTitulo').text('Editar pregunta');
                    $('#preguntaId').val(p.id);
                    $('#titulo').val(p.nombre);
                    $('#descripcion').val(p.descripcion);
                    $('#tipoPregunta').val(p.formatoDeRespuesta.formatoId);
                    $('#etiquetaDeAgrupacion').val(p.etiquetaId);
                    $('#imagenNombre').val(p.imagenDeReferencia);
                    $('#limiteDeEvidencias').val(p.numeroDeEvidenciasLimitadasA);
                    limiteDeEvidencias = p.numeroDeEvidenciasLimitadasA;
                    $('#numeroDeEvidenciasObligatorias').val(p.numeroDeEvidenciasObligatorias.toString());
                    evidenciasObligatorias = p.numeroDeEvidenciasObligatorias;
                    $('#requiereEvidencia').prop('checked', p.requiereEvidencia);

                    elegirOpciones(p.formatoDeRespuesta.formatoId, true);

                    $('#conPonderacion').prop('checked', (p.esPreguntaConPonderacion));
                    $('#ponderacion').val(p.ponderacion);
                    $('#multipleSeleccion').prop('checked', p.formatoDeRespuesta.permiteMultipleSeleccion);

                    $('#opcionesContainer').empty();
                    if (p.etiquetasPorEscalaNumerica != null && p.etiquetasPorEscalaNumerica.length > 0)
                    {
                        const e = p.etiquetasPorEscalaNumerica[0];
                        $('#limiteInferior').val(e.limiteInferior);
                        $('#limiteSuperior').val(e.limiteSuperior);
                        $('#etiquetaLimiteInferior').val(e.etiquetaParaEscalaInferior);
                        $('#etiquetaLimiteSuperior').val(e.etiquetaParaEscalaSuperior);
                    }

                    if (p.opcionesPorPregunta) {
                        p.opcionesPorPregunta.forEach((o, idx) => {
                            const evidenciaChecked = o.requiereEvidencia ? 'checked' : '';
                            const infoExtraChecked = o.requiereInformacionExtra ? 'checked' : '';
                            const generaTareaChecked = o.generaTarea ? 'checked' : '';
                            const ponderacion = o.ponderacion !== null ? o.ponderacion : 'NA';

                            $('#opcionesContainer').append(`
                            <div class="opcion-item">
                                <fieldset class="border p-3 mb-1 rounded">
                                    <div id="item-contenedor${idx}">
                                            <div class="row mb-1">
                                                <div class="col-2">
                                                    <input type="text" class="form-control" placeholder="Etiqueta" id="opcionEtiqueta" name="opciones[${idx}].Texto" value="${o.etiqueta}" autocomplete="off"/>
                                                </div>
                                                <div class="col-2">
                                                    <input type="text" class="form-control" placeholder="Valor" id="opcionPonderacion" name="opciones[${idx}].Valor" value="${ponderacion}" autocomplete="off"/>
                                                </div>
                                                <div class="col-2">
                                                    <input type="checkbox" class="form-check-input" id="requiereInformacionExtra" value="${p.requiereInformacionExtra}" ${infoExtraChecked} onchange="agregarComplemento(this.checked, ${idx}, null)"/>
                                                    <label class="form-check-label" for="reqInformacionExtra">Info. Extra</label>
                                                </div>
                                                <div class="col-3">
                                                    <input type="checkbox" class="form-check-input" id="requiereEvidenciaOpcion" value="${p.requiereEvidencia}" ${evidenciaChecked} />
                                                    <label class="form-check-label" for="reqEvidenciaOpcion">Req. Evidencia</label>
                                                </div>
                                                <div class="col-2">
                                                    <input type="checkbox" class="form-check-input" id="generaTarea" value="${p.generaTarea}" ${generaTareaChecked} />
                                                    <label class="form-check-label" for="generaTarea">Genera tarea</label>
                                                </div>
                                                <div class="col-1">
                                                    <button class="btn btn-sm btn-danger" type="button" onclick="$(this).closest('.opcion-item').remove()">🗑</button>
                                                </div>
                                            </div>
                                    </div>
                                </fieldset>
                            </div>
                            `);

                            if (infoExtraChecked) {
                                agregarComplemento(true, idx, o.opcionesComplemento[0]);
                            }
                        });
                    }
                    $('#modalPregunta').modal('show');
                } else {
                    showAlert(r.error || 'No se pudo cargar la pregunta', 'error');
                }
            });
        }

        function esNumero(value) {
            return /^\d+$/.test(value);
        }

        function mostrarModalGuardado() {
            $('#mensajeGuardado').text('Guardado correctamente');
            $('#modalGuardado').modal('show');
        }

        function recargarPreguntas() {
            $('#modalGuardado').modal('hide');
            $('#modalEtiqueta').modal('hide');
            location.reload();
        }

        let preguntaIdEliminar = 0;
        function confirmarEliminarPregunta(id) {
            preguntaIdEliminar = id;
            $('#modalConfirmarEliminar').modal('show');
        }

        function eliminarPregunta() {
            $.post('@Url.Action("EliminarPregunta", "Pregunta")', { id: preguntaIdEliminar }, function (r) {
                if (r.success) {
                    $('#modalConfirmarEliminar').modal('hide');
                    location.reload();
                } else {
                    showAlert(r.error || 'Error al eliminar', 'error');
                }
            });
        }
    </script>
}




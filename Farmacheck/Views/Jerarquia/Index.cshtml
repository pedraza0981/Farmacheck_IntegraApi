@model Farmacheck.Application.Models.Common.PaginatedResponse<Farmacheck.Models.JerarquiaViewModel>
@{
    ViewData["Title"] = "Jerarquía";
}
<style>
    #tablaDatos thead th {
        text-align: center;
        vertical-align: middle;
    }
</style>
<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="text-dark">Jerarquía de Roles</h4>
        <button id="btnNuevo" class="btn" style="background-color:#00ab8e; color:white;">
            <i class="bi bi-plus-circle"></i> Nueva relación
        </button>
    </div>
    <table class="table table-bordered custom-table" id="tablaDatos">
        <thead>
            <tr>
                <th style="width:10%;">Id</th>
                <th style="width:20%;">Nombre</th>
                <th style="width:20%;">Rol Superior</th>
                <th style="width:20%;">Rol Subordinado</th>
                <th style="width:20%;">Estatus</th>
                <th style="width:10%;" class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var u in Model.Items)
        {
            <tr>
                <td>@u.Id</td>
                <td>@u.Nombre</td>
                <td>@u.RolSuperiorNombre</td>
                <td>@u.RolSubordinadoNombre</td>
                <td>@(u.Estatus ? "Activo" : "Inactivo")</td>
                <td class="text-center">
                    <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editar(@u.Id)"><i class="bi bi-pencil"></i></button>
                    <button class="btn btn-sm" style="background-color:#79b828; color:white;" onclick="eliminar(@u.Id)"><i class="bi bi-trash"></i></button>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div class="d-flex justify-content-end">
        <nav>
            <ul class="pagination mb-0" id="paginador"></ul>
        </nav>
    </div>
</div>

<div class="modal fade" id="modalEntidad" tabindex="-1" aria-labelledby="modalTitulo" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary_form text-white">
                <h5 class="modal-title" id="modalTitulo">Nueva relación</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="entidadId" />
                <div class="mb-3">
                    <label>Nombre</label>
                    <input type="text" class="form-control" id="nombre" placeholder="Nombre" />
                </div>
                <div class="form-check form-switch mb-3">
                    <input class="form-check-input" type="checkbox" id="estatusCheck">
                    <label class="form-check-label" for="estatusCheck">Habilitado</label>
                </div>
                <div class="row g-2 align-items-end">
                    <div class="col-md-5">
                        <label>Rol Superior</label>
                        <select class="form-select" id="rolSuperior"></select>
                    </div>
                    <div class="col-md-5">
                        <label>Rol Subordinado</label>
                        <select class="form-select" id="rolSubordinado"></select>
                    </div>
                    <div class="col-md-2">
                        <button type="button" id="btnAgregar" class="btn btn-outline-primary w-100">Agregar</button>
                    </div>
                </div>
                <table class="table table-bordered mt-3" id="tablaTemp">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Rol Superior</th>
                            <th>Rol Subordinado</th>
                            <th style="width:50px"></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button id="btnGuardar" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var pagina = @Model.CurrentPage;
        var pageSize = @Model.PageSize;

        $(document).ready(function () {
            cargarRoles();

            $('#tablaDatos').DataTable({
                paging: false,
                searching: true,
                ordering: true,
                info: false,
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                }
            });

            renderPagination({ totalPages: @Model.TotalPages, hasNextPage: @Model.HasNextPage.ToString().ToLower(), hasPreviousPage: @Model.HasPreviousPage.ToString().ToLower() });

            $('#btnNuevo').click(function () {
                limpiar();
                $('#modalTitulo').text('Nueva relación');
                $('#modalEntidad').modal('show');
            });

            $('#rolSuperior').change(function () {
                cargarRolesSubordinado($(this).val());
            });

            $('#btnAgregar').click(function () {
                const supId = $('#rolSuperior').val();
                const subId = $('#rolSubordinado').val();
                if (!supId || !subId) return;

                let repetido = false;
                $('#tablaTemp tbody tr').each(function () {
                    if ($(this).data('sup') == supId && $(this).data('sub') == subId) {
                        repetido = true;
                        return false;
                    }
                });
                if (repetido) {
                    showAlert('La relación ya fue agregada.', 'warning');
                    return;
                }

                const nombre = $('#nombre').val();
                const supText = $('#rolSuperior option:selected').text();
                const subText = $('#rolSubordinado option:selected').text();
                $('#tablaTemp tbody').append(`<tr data-nombre="${nombre}" data-sup="${supId}" data-sub="${subId}">
                        <td>${nombre}</td>
                        <td>${supText}</td>
                        <td>${subText}</td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-danger" onclick="$(this).closest('tr').remove()"><i class="bi bi-trash"></i></button>
                        </td>
                    </tr>`);
            });

            $('#btnGuardar').click(function () {
                const id = parseInt($('#entidadId').val()) || 0;

                if (id === 0) {
                    const datos = [];
                    $('#tablaTemp tbody tr').each(function () {
                        datos.push({
                            Nombre: $(this).data('nombre'),
                            RolSuperiorId: $(this).data('sup'),
                            RolSubordinadoId: $(this).data('sub'),
                            Estatus: $('#estatusCheck').prop('checked')
                        });
                    });

                    if (datos.length === 0) {
                        showAlert('Agregue al menos una relación.', 'warning');
                        return;
                    }

                    $.ajax({
                        url: '@Url.Action("Guardar", "Jerarquia")',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(datos),
                        success: function (r) {
                            if (r.success) {
                                $('#modalEntidad').modal('hide');
                                showAlert('Relaciones guardadas', 'success');
                                cargar(pagina);
                            } else {
                                showAlert(r.error || 'Error al guardar', 'error');
                            }
                        }
                    });
                } else {
                    const dato = {
                        Id: id,
                        Nombre: $('#nombre').val(),
                        RolSuperiorId: $('#rolSuperior').val(),
                        RolSubordinadoId: $('#rolSubordinado').val(),
                        Estatus: $('#estatusCheck').prop('checked')
                    };

                    $.ajax({
                        url: '@Url.Action("GuardarUno", "Jerarquia")',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(dato),
                        success: function (r) {
                            if (r.success) {
                                $('#modalEntidad').modal('hide');
                                showAlert('Relación actualizada', 'success');
                                cargar(pagina);
                            } else {
                                showAlert(r.error || 'Error al guardar', 'error');
                            }
                        }
                    });
                }
            });
        });

        function cargar(pag) {
            $.get('@Url.Action("Listar", "Jerarquia")', { page: pag }, function (r) {
                if (r.success) {
                    const tabla = $('#tablaDatos');
                    if ($.fn.DataTable.isDataTable(tabla)) {
                        tabla.DataTable().destroy();
                    }
                    const tbody = tabla.find('tbody');
                    tbody.empty();

                    r.data.items.forEach(u => {
                        tbody.append(`<tr>
                            <td>${u.id}</td>
                            <td>${u.nombre}</td>
                            <td>${u.rolSuperiorNombre}</td>
                            <td>${u.rolSubordinadoNombre}</td>
                            <td>${u.estatus? 'Activo' : 'Inactivo'}</td>
                            <td class="text-center">
                                <button class="btn btn-sm" style="background-color:#00ab8e; color:white;" onclick="editar(${u.id})"><i class="bi bi-pencil"></i></button>
                                <button class="btn btn-sm" style="background-color:#79b828; color:white;" onclick="eliminar(${u.id})"><i class="bi bi-trash"></i></button>
                            </td>
                        </tr>`);
                    });

                    tabla.DataTable({
                        paging: false,
                        searching: true,
                        ordering: true,
                        info: false,
                        language: {
                            url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json'
                        }
                    });

                    pagina = pag;
                    renderPagination(r.data);
                }
            });
        }

        function renderPagination(data) {
            const pagContainer = $('#paginador');
            pagContainer.empty();

            if (data.totalPages <= 0) return;

            const total = data.totalPages;
            const current = pagina;

            const addPage = (p) => {
                const active = p === current ? 'active' : '';
                pagContainer.append(`<li class="page-item ${active}"><a class="page-link" href="#" data-page="${p}">${p}</a></li>`);
            };

            pagContainer.append(`<li class="page-item ${data.hasPreviousPage ? '' : 'disabled'}"><a class="page-link" href="#" data-page="${current - 1}">Anterior</a></li>`);

            if (total <= 5) {
                for (let i = 1; i <= total; i++) {
                    addPage(i);
                }
            } else {
                if (current <= 3) {
                    for (let i = 1; i <= 4; i++) {
                        addPage(i);
                    }
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    addPage(total);
                } else if (current >= total - 2) {
                    addPage(1);
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    for (let i = total - 3; i <= total; i++) {
                        addPage(i);
                    }
                } else {
                    addPage(1);
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    for (let i = current - 1; i <= current + 1; i++) {
                        addPage(i);
                    }
                    pagContainer.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                    addPage(total);
                }
            }

            pagContainer.append(`<li class="page-item ${data.hasNextPage ? '' : 'disabled'}"><a class="page-link" href="#" data-page="${current + 1}">Siguiente</a></li>`);

            pagContainer.find('a').off('click').on('click', function (e) {
                e.preventDefault();
                const p = parseInt($(this).data('page'));
                if (!isNaN(p) && p > 0 && p !== current && p <= total) {
                    cargar(p);
                }
            });
        }

        function cargarRoles() {
            $.get('@Url.Action("Listar", "Rol")', function (r) {
                const select = $('#rolSuperior');
                select.empty();
                r.data.forEach(u => {
                    select.append(`<option value="${u.id}">${u.nombre}</option>`);
                });
                cargarRolesSubordinado(select.val());
            });
        }

        function cargarRolesSubordinado(supId) {
            $.get('@Url.Action("Listar", "Rol")', function (r) {
                const select = $('#rolSubordinado');
                select.empty();
                r.data.forEach(u => {
                    if (u.id != supId) {
                        select.append(`<option value="${u.id}">${u.nombre}</option>`);
                    }
                });
            });
        }

        function editar(id) {
            $.get('@Url.Action("Obtener", "Jerarquia")', { id }, function (r) {
                if (r.success) {
                    const u = r.data;
                    $('#modalTitulo').text('Editar relación');
                    $('#entidadId').val(u.id);
                    $('#nombre').val(u.nombre);
                    $('#estatusCheck').prop('checked', u.estatus).prop('disabled', false);
                    $('#tablaTemp').hide();
                    $('#btnAgregar').hide();
                    $('#rolSuperior').val(u.rolSuperiorId);
                    cargarRolesSubordinado(u.rolSuperiorId);
                    setTimeout(function () { $('#rolSubordinado').val(u.rolSubordinadoId); }, 300);
                    $('#modalEntidad').modal('show');
                } else {
                    showAlert(r.error || 'No se pudo cargar', 'error');
                }
            });
        }

        function eliminar(id) {
            confirmAction('¿Deseas eliminar esta relación?').then(function (ok) {
                if (!ok) return;
                $.post('@Url.Action("Eliminar", "Jerarquia")', { id }, function (r) {
                    if (r.success) {
                        cargar(pagina);
                    } else {
                        showAlert(r.error || 'Error al eliminar', 'error');
                    }
                });
            });
        }

        function limpiar() {
            $('#tablaTemp tbody').empty();
            $('#rolSuperior').val('');
            $('#rolSubordinado').empty();
            $('#nombre').val('');
            $('#entidadId').val('');
            $('#estatusCheck').prop('checked', true).prop('disabled', true);
            $('#tablaTemp').show();
            $('#btnAgregar').show();
        }
    </script>
}
